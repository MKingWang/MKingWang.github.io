<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>解决docker和kvm网络冲突的问题</title>
      <link href="/611c78a3.html"/>
      <content type="html"><![CDATA[<p>在一台kvm宿主机上安装了docker以后发现kvm的虚拟机无法获取到ip，配置静态ip网络也无法正常工作，但是宿主机的网络却很正，排查到<code>libvirtd</code>有如下报错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Apr 18 13:12:05 workspace libvirtd[721]: Failed to open file &apos;/sys/class/net/vethaf21808/operstate&apos;: No such file or directory</span><br><span class="line">Apr 18 13:12:05 workspace libvirtd[721]: unable to read: /sys/class/net/vethaf21808/operstate: No such file or directory</span><br><span class="line">Apr 18 13:37:01 workspace libvirtd[721]: internal error: End of file from qemu monitor</span><br><span class="line">Apr 18 13:37:25 workspace libvirtd[721]: internal error: End of file from qemu monitor</span><br></pre></td></tr></table></figure></p><p>排查了一通没有更详细的消息，猜测是docker网桥导致的问题。于是查询到资料将docker网桥绑定到<code>br0</code>上面问题解决。操作如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/docker/daemon.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"bridge"</span>: <span class="string">"br0"</span>,</span><br><span class="line">  <span class="string">"default-gateway"</span>: <span class="string">"172.16.80.1"</span> <span class="comment">#此处ip地址为宿主机的真实网关</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>PS：<br>故障原因是<code>docker server</code>在启动的时候会创建docker网桥<code>docker0</code>，用于提供docker内部的网络通信以及容器和docker外界的通信。默认<code>docker0</code>会绑定物理网卡如<code>enp0xxx</code>、<code>eth0</code>。而<code>br0</code>也绑定了物理网卡，<code>docker0</code>将物理网卡抢占，导致kvm使用<code>br0</code>无法正常获取网络。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux,docker,kvm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>配置v2ray+nginx+ws访问国际网络</title>
      <link href="/133ac8a5.html"/>
      <content type="html"><![CDATA[<p>搞之前先贴上<a href="https://toutyrater.github.io/" target="_blank" rel="noopener">官方文档</a></p><h2 id="0x00-准备工作"><a href="#0x00-准备工作" class="headerlink" title="0x00 准备工作"></a>0x00 准备工作</h2><ol><li>VPS一台(visa信用卡可以在<code>google cloud</code>撸一年vps)</li><li>一个域名</li><li>申请一年免费证书(可以在阿里云申请免费域名，也可以用<code>Let&#39;s Encrypt</code>申请免费证书并自动更新)</li></ol><h2 id="0x01-一键安装配置v2ray"><a href="#0x01-一键安装配置v2ray" class="headerlink" title="0x01 一键安装配置v2ray"></a>0x01 一键安装配置v2ray</h2><p><code>bash &lt;(curl -L -s https://install.direct/go.sh)</code></p><p>v2ray配置文件路径<code>/etc/v2ray/conf.json</code><br><strong>注:json不支持注释，此处如果复制，需要删除每行#以及后面内容</strong><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [&#123;</span><br><span class="line">    "port": 12345,    #修改监听端口</span><br><span class="line">    "listen": "127.0.0.1",  #增加监听地址</span><br><span class="line">    "protocol": "vmess",</span><br><span class="line">    "settings": &#123;</span><br><span class="line">      "clients": [</span><br><span class="line">        &#123;</span><br><span class="line">          "id": "bd034e62-4e0c-40c7-a39b-bac3a750aa96", #用uuidgen生成uuid后修改此处</span><br><span class="line">          "level": 1,</span><br><span class="line">          "alterId": 64</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;, #ws配置开始</span><br><span class="line">      "streamSettings": &#123;</span><br><span class="line">        "network": "ws",</span><br><span class="line">        "wsSettings": &#123;</span><br><span class="line">        "path": "/ads"  #修改此处的路径并记录，后面在nginx中需要用到</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; #ws配置结束</span><br><span class="line">  &#125;],</span><br><span class="line">  "outbounds": [&#123;</span><br><span class="line">    "protocol": "freedom",</span><br><span class="line">    "settings": &#123;&#125;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    "protocol": "blackhole",</span><br><span class="line">    "settings": &#123;&#125;,</span><br><span class="line">    "tag": "blocked"</span><br><span class="line">  &#125;],</span><br><span class="line">  "routing": &#123;</span><br><span class="line">    "rules": [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [<span class="string">"geoip:private"</span>],</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"blocked"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="0x02-安装并配置nginx"><a href="#0x02-安装并配置nginx" class="headerlink" title="0x02 安装并配置nginx"></a>0x02 安装并配置nginx</h2><p><code>yum install nginx</code>，在<code>/etc/nginx/conf.d/</code>中增加<code>v2ray.conf</code>文件，内容如下<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123; <span class="comment">#此server强制80跳转到443</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> www.abc.com;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^(.*)$</span> https://<span class="variable">$&#123;server_name&#125;</span><span class="variable">$1</span> <span class="literal">permanent</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span>  www.abc.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span>    /etc/nginx/ssl/v2ray.pem;  <span class="comment">#域名证书存放路径</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>    /etc/nginx/ssl/v2ray.key; <span class="comment">#域名key存放路径</span></span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">10m</span>;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">497</span>  https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> = /ads &#123;  <span class="comment">#此处location为v2ray中配置的path</span></span><br><span class="line">       <span class="attribute">proxy_pass</span>       http://127.0.0.1:12345;</span><br><span class="line">       <span class="attribute">proxy_redirect</span>             <span class="literal">off</span>;</span><br><span class="line">       <span class="attribute">proxy_http_version</span>         <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">       <span class="attribute">proxy_set_header</span> Upgrade   <span class="variable">$http_upgrade</span>;</span><br><span class="line">       <span class="attribute">proxy_set_header</span> Connection <span class="string">"upgrade"</span>;</span><br><span class="line">       <span class="attribute">proxy_set_header</span> Host      <span class="variable">$http_host</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 优化操作1 将除了ads以外的请求重定向到百度，也可以重定向到其他域名，如个人博客之类的</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">       <span class="attribute">rewrite</span> .* https://www.baidu.com/ <span class="literal">permanent</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li><strong>优化操作2</strong> 隐藏nginx版本号<br>在<code>/etc/nginx/nginx.conf</code>的<code>http</code>段增加<code>server_tokens off;</code></li></ul>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>记录一次ES修复的经历</title>
      <link href="/b07f71a1.html"/>
      <content type="html"><![CDATA[<h2 id="0x00-起因"><a href="#0x00-起因" class="headerlink" title="0x00 起因"></a>0x00 起因</h2><p>前端时间公司的日志服务器挂了，开发小伙伴吐槽说日志服务器无法我访问，登录到其中一台服务器上发现，elasticsearch无法启动，数据盘也没有挂载，fstab没有挂盘信息。elasticsearch是跑在阿里云上的，故障的ES节点被执行过DHCP故障的脚本，怀疑是脚本导致服务器重启。<br>通过挂载数据磁盘，启动ES节点，集群状态还是red，但节点已经恢复为3个。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET -u user:passwd <span class="string">'http://127.0.0.1:9200/_cluster/health?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"es_cluster"</span>,</span><br><span class="line">  <span class="string">"status"</span> : <span class="string">"red"</span>,</span><br><span class="line">  <span class="string">"timed_out"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="string">"number_of_nodes"</span> : 3,</span><br><span class="line">  <span class="string">"number_of_data_nodes"</span> : 3,</span><br><span class="line">  <span class="string">"active_primary_shards"</span> : 1124,</span><br><span class="line">  <span class="string">"active_shards"</span> : 1126,</span><br><span class="line">  <span class="string">"relocating_shards"</span> : 0,</span><br><span class="line">  <span class="string">"initializing_shards"</span> : 8,</span><br><span class="line">  <span class="string">"unassigned_shards"</span> : 1178,</span><br><span class="line">  <span class="string">"delayed_unassigned_shards"</span> : 0,</span><br><span class="line">  <span class="string">"number_of_pending_tasks"</span> : 0,</span><br><span class="line">  <span class="string">"number_of_in_flight_fetch"</span> : 0,</span><br><span class="line">  <span class="string">"task_max_waiting_in_queue_millis"</span> : 0,</span><br><span class="line">  <span class="string">"active_shards_percent_as_number"</span> : 48.702422145328725</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="0x01-红变黄"><a href="#0x01-红变黄" class="headerlink" title="0x01 红变黄"></a>0x01 红变黄</h2><p>经过一小段时间的观察，发现<code>unassigned_shards</code>并没有减少，经过一系列的GOOGLE,找到是分片未分配导致，于是通过<code>es api</code>找到未分配的分片<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET -u user:passwd http://127.0.0.1:9200/_cat/shards  | grep UNASSIGNED</span><br></pre></td></tr></table></figure></p><p>发现有大量未分配的分片和副本,其中<code>p</code>是分片,<code>r</code>是副本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">logstash-2018.12.11             2 r UNASSIGNED</span><br><span class="line">logstash-2018.12.11             1 r UNASSIGNED</span><br><span class="line">logstash-2018.12.11             0 r UNASSIGNED</span><br><span class="line">logstash-2019.05.06             3 p UNASSIGNED</span><br><span class="line">logstash-2019.05.06             3 r UNASSIGNED</span><br><span class="line">logstash-2019.05.06             4 p UNASSIGNED</span><br><span class="line">logstash-2019.05.06             4 r UNASSIGNED</span><br><span class="line">logstash-2019.05.06             2 p UNASSIGNED</span><br><span class="line">logstash-2019.05.06             2 r UNASSIGNED</span><br><span class="line">logstash-2019.05.06             1 p UNASSIGNED</span><br><span class="line">logstash-2019.05.06             1 r UNASSIGNED</span><br><span class="line">logstash-2019.05.06             0 p UNASSIGNED</span><br><span class="line">logstash-2019.05.06             0 r UNASSIGNED</span><br><span class="line">logstash-2019.03.16             4 r UNASSIGNED</span><br><span class="line">logstash-2019.03.16             2 r UNASSIGNED</span><br><span class="line">logstash-2019.03.16             1 r UNASSIGNED</span><br><span class="line">logstash-2019.02.20             3 r UNASSIGNED</span><br><span class="line">logstash-2019.02.20             2 r UNASSIGNED</span><br><span class="line">logstash-2019.02.20             0 r UNASSIGNED</span><br><span class="line">logstash-2019.02.06             3 r UNASSIGNED</span><br><span class="line">logstash-2019.02.06             1 r UNASSIGNED</span><br><span class="line">logstash-2019.02.06             0 r UNASSIGNED</span><br></pre></td></tr></table></figure></p><p>于是尝试手工分配到节点，发现分片可以被分配，但是对副本进行分配，会报错已存在。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分片分配API</span></span><br><span class="line">curl -H <span class="string">"Content-Type: application/json"</span> -XPOST -u user:passwd http://127.0.0.1:9200/_cluster/reroute -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">     "commands" : [ &#123;</span></span><br><span class="line"><span class="string">          "allocate_empty_primary" : &#123; </span></span><br><span class="line"><span class="string">              "index" : "logstash-2019.05.06",  #索引，对应上面第一列</span></span><br><span class="line"><span class="string">              "shard" : "3",    #分片号，对应上面第二列</span></span><br><span class="line"><span class="string">              "node": "node-1",  #节点名称</span></span><br><span class="line"><span class="string">              "accept_data_loss" : true </span></span><br><span class="line"><span class="string">            &#125; &#125;]&#125;'</span></span><br></pre></td></tr></table></figure></p><p>修复命令测试OK，编写脚本，修复所有分片<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 先使用</span></span><br><span class="line"><span class="comment"># curl -XGET -u user:passwd http://127.0.0.1:9200/_cat/shards  | grep 'p UNASSIGNED' &gt; error_shard</span></span><br><span class="line"><span class="comment"># 将数据导入到error_shard文件内 </span></span><br><span class="line">es_arry=(</span><br><span class="line"><span class="string">"node-1"</span></span><br><span class="line"><span class="string">"node-2"</span></span><br><span class="line"><span class="string">"node-3"</span></span><br><span class="line">)</span><br><span class="line">sum=0</span><br><span class="line"></span><br><span class="line">cat error_shard | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    index=`<span class="built_in">echo</span> <span class="variable">$line</span> | awk <span class="string">'&#123;print $1&#125;'</span>`</span><br><span class="line">    shard=`<span class="built_in">echo</span> <span class="variable">$line</span> | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">    sum=`expr <span class="variable">$sum</span> + 1`</span><br><span class="line">    node=`expr <span class="variable">$sum</span> % 3`</span><br><span class="line">    curl -H <span class="string">"Content-Type: application/json"</span> -XPOST -u user:passwd http://127.0.0.1:9200/_cluster/reroute -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">         "commands" : [ &#123; </span></span><br><span class="line"><span class="string">             "allocate_empty_primary" : &#123; </span></span><br><span class="line"><span class="string">                 "index" : "'</span><span class="variable">$&#123;index&#125;</span><span class="string">'", </span></span><br><span class="line"><span class="string">                 "shard" : "'</span><span class="variable">$&#123;shard&#125;</span><span class="string">'", </span></span><br><span class="line"><span class="string">                 "node": "'</span><span class="variable">$&#123;es_arry[node]&#125;</span><span class="string">'", "accept_data_loss" : true &#125;  &#125;]&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><p>修复完所有未分配的切片后，查看集群状态，从red变成了yellow。</p><h2 id="0x02-删除引起的插曲"><a href="#0x02-删除引起的插曲" class="headerlink" title="0x02 删除引起的插曲"></a>0x02 删除引起的插曲</h2><p>经过一宿的观察，发现集群依旧处于yellow状态，检查服务器磁盘空间，发现一台服务器磁盘使用量在83%,另外两台87%,节点无法分配到切片和副本，多出来的切片和副本就这么被挂空了。经过沟通，决定只保留1个月的数据。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">curl -u user:password  -H<span class="string">'Content-Type:application/json'</span> -d<span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "query": &#123;</span></span><br><span class="line"><span class="string">        "range": &#123;</span></span><br><span class="line"><span class="string">            "@timestamp": &#123;</span></span><br><span class="line"><span class="string">                "lt": "now-30d",</span></span><br><span class="line"><span class="string">                "format": "epoch_millis"</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">'</span> -XPOST <span class="string">"http://127.0.0.1:9200/*-*/_delete_by_query?pretty"</span></span><br></pre></td></tr></table></figure></p><p>上面的命令，跑了半天没反应，查看集群状态red，node数量2，懵逼。。。。。，ES节点删挂了一个。</p><h2 id="0x03-黄变绿"><a href="#0x03-黄变绿" class="headerlink" title="0x03 黄变绿"></a>0x03 黄变绿</h2><p>经过一系列的操作，把挂掉的ES节点重新拉回集群，把red状态恢复到yellow状态。于是乎换了一个索引删除方式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X DELETE -u user:passwd <span class="string">'http://127.0.0.1:9200/logstash-2019.03*'</span></span><br></pre></td></tr></table></figure></p><p>通过手动删除大量历史索引，集群磁盘空出大量空间，经过几个小时的等待，集群恢复到了green状态。</p><h2 id="0x04-编写程序定时删除"><a href="#0x04-编写程序定时删除" class="headerlink" title="0x04 编写程序定时删除"></a>0x04 编写程序定时删除</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"flag"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> values <span class="keyword">struct</span> &#123;</span><br><span class="line">index  <span class="keyword">string</span></span><br><span class="line">format <span class="keyword">string</span></span><br><span class="line">day    <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">f := &amp;values&#123;&#125;</span><br><span class="line">f.valueFlag()</span><br><span class="line">now := time.Now()</span><br><span class="line">t := now.AddDate(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>-f.day)</span><br><span class="line">err := delteEsIndex(f.index + t.Format(f.format))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *values)</span> <span class="title">valueFlag</span><span class="params">()</span></span> &#123;</span><br><span class="line">index := flag.String(<span class="string">"index"</span>, <span class="string">"logstash-"</span>, <span class="string">"索引前缀"</span>)</span><br><span class="line">format := flag.String(<span class="string">"format"</span>, <span class="string">"yyyy.mm.dd"</span>, <span class="string">"索引的时间格式"</span>)</span><br><span class="line">day := flag.Int(<span class="string">"n"</span>, <span class="number">30</span>, <span class="string">"删除n天以前的数据"</span>)</span><br><span class="line">flag.Parse()</span><br><span class="line">*format = strings.Replace(*format, <span class="string">"yyyy"</span>, <span class="string">"2006"</span>, <span class="number">-1</span>)</span><br><span class="line">*format = strings.Replace(*format, <span class="string">"mm"</span>, <span class="string">"01"</span>, <span class="number">-1</span>)</span><br><span class="line">*format = strings.Replace(*format, <span class="string">"dd"</span>, <span class="string">"02"</span>, <span class="number">-1</span>)</span><br><span class="line">v.index = *index</span><br><span class="line">v.format = *format</span><br><span class="line">v.day = *day</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">delteEsIndex</span><span class="params">(index <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">url := <span class="string">"http://user:password@127.0.0.1:9200/"</span> + index</span><br><span class="line">request, err := http.NewRequest(<span class="string">"DELETE"</span>, url, <span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">request.Header.Set(<span class="string">"Content-Type"</span>, <span class="string">"application/json"</span>)</span><br><span class="line">client := &amp;http.Client&#123;&#125;</span><br><span class="line">_, err = client.Do(request)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>其他的维护接口</p><ul><li><p>设置副本数量，设置为0表示取消副本<br><code>curl -XPUT -u user:password &#39;http://127.0.0.1:9200/index/_settings&#39; -d &#39;{&quot;number_of_replicas&quot;: 0}&#39;</code></p></li><li><p>查看所有index<br><code>curl -XGET -u user:password http://127.0.0.1:9200/_cat/indices\?v</code></p></li><li><p>查看详细的集群监控信息<br><code>curl -XGET -u user:password http://127.0.0.1:9200/_cat/indices\?v</code></p></li></ul>]]></content>
      
      
    </entry>
    
    <entry>
      <title>删除所有git commit</title>
      <link href="/50675bd.html"/>
      <content type="html"><![CDATA[<p>记录一下，删除所有git commit的方法，但不改变原有代码的方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 将当前分支备份</span></span><br><span class="line">git checkout --orphan backup</span><br><span class="line"><span class="comment"># 2. 添加文件到备份分支</span></span><br><span class="line">git add -A</span><br><span class="line"><span class="comment"># 3. 提交</span></span><br><span class="line">git commit -am <span class="string">"commit message"</span></span><br><span class="line"><span class="comment"># 4. 删除分支</span></span><br><span class="line">git branch -D master</span><br><span class="line"><span class="comment"># 5. 把当前分支重命名为备份的分支</span></span><br><span class="line">git branch -m master</span><br><span class="line"><span class="comment"># 6. 强制更新代码到远程分支</span></span><br><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure><p><del>不要问我为什么会有这篇文章，说多了都是泪，我的历史提交啊。。。</del></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>无键盘鼠标显示器玩转树莓派</title>
      <link href="/b369db93.html"/>
      <content type="html"><![CDATA[<h2 id="0x01-烧写镜像到内存卡"><a href="#0x01-烧写镜像到内存卡" class="headerlink" title="0x01 烧写镜像到内存卡"></a>0x01 烧写镜像到内存卡</h2><p>使用到的软件是<code>etcher</code>，附赠<a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">下载地址</a>(linux、macos、windows都可以用)<br>第一个加号图标选的是镜像，第二个磁盘图标选内存卡，第三个点了就是开始烧写了<br><img src="/img/rasp/1-1.png" alt=""><br>下面就是烧写中的状态，这个步骤下泡杯咖啡等会儿就好<br><img src="/img/rasp/1-2.png" alt=""></p><h2 id="0x02-预配置"><a href="#0x02-预配置" class="headerlink" title="0x02 预配置"></a>0x02 预配置</h2><p>烧写玩完内存卡之后，会出现一个boot分区的磁盘，如果没有重新拔插一下内存卡</p><ul><li><p>配置ssh<br>打开boot分区，在boot分区根目录新建一个ssh文件就好了，文件是一个空文件</p></li><li><p>配置wifi<br>在boot分区，新建一个<code>wpa_supplicant.conf</code>文件，填入如下内容    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line">network=&#123;</span><br><span class="line">ssid=&quot;your wifi&quot;</span><br><span class="line">psk=&quot;your wifi password&quot;</span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="0x03-远程命令行连接树莓派"><a href="#0x03-远程命令行连接树莓派" class="headerlink" title="0x03 远程命令行连接树莓派"></a>0x03 远程命令行连接树莓派</h2><p>给树莓派通电，等待树莓派彻底启动。登录到路由器后台，找到树莓派的ip。下面是我的路由器，样式普通路由器到dhcp–&gt;客户端找找。其他高级路由，比如极路由，小米路由等因为我没有这些设备，给看官自行研究，一般在终端管理，客户端管理之类的。<br><img src="/img/rasp/2-1.png" alt=""><br>此时可以使用ssh客户端工具连接到树莓派上，树莓派默认的用户名为<code>pi</code>，密码为<code>raspberry</code></p><h2 id="0x04-远程桌面连接树莓派"><a href="#0x04-远程桌面连接树莓派" class="headerlink" title="0x04 远程桌面连接树莓派"></a>0x04 远程桌面连接树莓派</h2><p>在树莓派命令行执行<code>vncserver</code>,运行树莓派系统自带的vnc服务<br>重点是最后一行把括号里面的全部复制到<code>vncviewer</code>中<br><img src="/img/rasp/4-1.png" alt=""><br><img src="/img/rasp/4-2.png" alt=""><br>在弹出来的对话框中，填入树莓派的账号密码<br>user部分填写pi,password部分填写raspberry<br><img src="/img/rasp/4-3.png" alt=""></p><h2 id="0x05-设置vncserver开机启动"><a href="#0x05-设置vncserver开机启动" class="headerlink" title="0x05 设置vncserver开机启动"></a>0x05 设置vncserver开机启动</h2><p>执行下面命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切换到root用户</span></span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加服务文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'[Unit]</span></span><br><span class="line"><span class="string">Description=vncserver</span></span><br><span class="line"><span class="string">Wants=network.target</span></span><br><span class="line"><span class="string">After=network.target network.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">User=pi</span></span><br><span class="line"><span class="string">ExecStart=/usr/bin/vncserver -depth 16 -geometry 1024x768 :1</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">KillMode=process</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target'</span> &gt; /etc/systemd/system/vncserver.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新服务列表</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="comment">#将服务添加到开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> vncserver</span><br></pre></td></tr></table></figure></p><h2 id="0x06-修改语言和时区"><a href="#0x06-修改语言和时区" class="headerlink" title="0x06 修改语言和时区"></a>0x06 修改语言和时区</h2><p>修改语言和时区，需要重启生效。在修改完成后，最终确定按钮会提示是否重启，直接重启就行。<br>同样按照第五步，打开<code>Raspberry Pi Configuration</code>，这次我们选择<code>Localisation</code>标签<br><img src="/img/rasp/5-2.png" alt=""></p><ul><li><p>修改语言<br>点击<code>Set Locale</code>,在弹出来的界面如图选择，language使用滚轮滑动到最下面，选择第二个<br><img src="/img/rasp/5-3.png" alt=""></p></li><li><p>修改时区<br>点击<code>Set Timezone</code>，在弹出的界面如图选择<br><img src="/img/rasp/5-4.png" alt=""></p></li></ul>]]></content>
      
      <categories>
          
          <category> linux </category>
          
          <category> raspberry </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>jenkins+maven java自动构建环境搭建</title>
      <link href="/231678a3.html"/>
      <content type="html"><![CDATA[<p>目前比较火的自动构建工具Jenkins不用过多介绍了，一款非常强大的CI工具。然后是maven，java的自动构建工具。下面简单介绍一下这两款工具的部署过程</p><h3 id="0x01-安装java环境"><a href="#0x01-安装java环境" class="headerlink" title="0x01 安装java环境"></a>0x01 安装java环境</h3><p>jenkins和maven都依赖<strong>java环境</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh jdk-8u131-linux-x64.rpm</span><br></pre></td></tr></table></figure></p><h3 id="0x02-安装maven"><a href="#0x02-安装maven" class="headerlink" title="0x02 安装maven"></a>0x02 安装maven</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget http://apache.osuosl.org/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz</span><br><span class="line">tar xf apache-maven-3.5.2-bin.tar.gz</span><br><span class="line">mv apache-maven-3.5.2 maven</span><br><span class="line"></span><br><span class="line">vim /etc/profile</span><br><span class="line"><span class="comment">#增加maven的环境变量</span></span><br><span class="line"><span class="built_in">export</span> MAV_HOME=/opt/maven</span><br><span class="line"><span class="built_in">export</span> MAV=<span class="variable">$MAV_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> MAV_OPTS=<span class="string">'-Xms256m -Xmx512m'</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$MAV</span>:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置maven本地源的路径</span></span><br><span class="line">vim /opt/maven/conf/settings.xml</span><br><span class="line"><span class="comment">#增加以下内容</span></span><br><span class="line">&lt;localRepository&gt;/data/maven_repo&lt;/localRepository&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试是否安装成功</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">mvn --version</span><br><span class="line"><span class="comment">#出现如下内容说明安装成功了</span></span><br><span class="line">Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)</span><br><span class="line">Maven home: /opt/maven</span><br><span class="line">Java version: 1.8.0_131, vendor: Oracle Corporation</span><br><span class="line">Java home: /usr/java/jdk1.8.0_131/jre</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">"linux"</span>, version: <span class="string">"3.10.0-693.el7.x86_64"</span>, arch: <span class="string">"amd64"</span>, family: <span class="string">"unix"</span></span><br></pre></td></tr></table></figure><h3 id="0x03-安装Jenkins"><a href="#0x03-安装Jenkins" class="headerlink" title="0x03 安装Jenkins"></a>0x03 安装Jenkins</h3><p>为了安全起见，jenkins建议使用非root用户运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">useradd jenkins</span><br><span class="line">mkdir /opt/jenkins</span><br><span class="line"><span class="built_in">cd</span> /opt/jenkins</span><br><span class="line">wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war</span><br><span class="line">chown jenkins.jenkins /opt/jenkins -R</span><br><span class="line">su - jenkins</span><br><span class="line">setsid java -jar /opt/jenkins/jenkins.war &gt;&gt; /opt/jenkins/jenkins.log</span><br></pre></td></tr></table></figure></p><p>打开jenkins页面，首先回提示输入输入随机密码，一般在/home/jenkins/.jenkins/secrets/initialAdminPassword<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /home/jenkins/.jenkins/secrets/initialAdminPassword</span><br><span class="line">7bd7d4f5ff244944a9a96754a8e17c84</span><br></pre></td></tr></table></figure></p><p><img src="/images/jenkins/1.png" alt="a"></p><p>输入随机密码，点击下一步后，提示安装插件，一般点左边这个推荐安装就行<br><img src="/images/jenkins/2.png" alt="b"></p><p>出现下面的图就开启等待状态了<br><img src="/images/jenkins/3.png" alt="c"></p><p>插件安装完后，按照提示创建管理员帐号<br><img src="/images/jenkins/4.png" alt="d"></p><p>配置好管理员帐号后，依次进入<code>Manage Jenkins</code>-&gt;<code>Configure Global Security</code>,进入安全设置，开启允许用户注册<br><img src="/images/jenkins/5.png" alt="e"></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>nginx反向代理websocket</title>
      <link href="/efc4f59c.html"/>
      <content type="html"><![CDATA[<h2 id="什么是websocket"><a href="#什么是websocket" class="headerlink" title="什么是websocket"></a>什么是websocket</h2><p>简单来说，websocket就是建立在tcp协议之上，和http协议良好兼容的双向通信协议。<br>websocket同样默认使用80端口(ws)和443端口(wss)。    </p><h2 id="websocket和http的区别"><a href="#websocket和http的区别" class="headerlink" title="websocket和http的区别"></a>websocket和http的区别</h2><p>websocket比http协议头部仅仅多了两个内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Upgrade: websocket</span><br><span class="line">Connection: Upgrade</span><br></pre></td></tr></table></figure></p><h2 id="nginx如何反向代理websocket"><a href="#nginx如何反向代理websocket" class="headerlink" title="nginx如何反向代理websocket"></a>nginx如何反向代理websocket</h2><p>由于websocket和http协议良好兼容，于是nginx可以很好的对websocket进行代理，只需对多出来的两个头部信息进行处理就行。配置如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line"><span class="comment"># 在http区域增加对upgrade协议的处理</span></span><br><span class="line">  map <span class="variable">$http_upgrade</span> <span class="variable">$connection_upgrade</span> &#123;</span><br><span class="line">    default upgrade;</span><br><span class="line">    <span class="string">''</span>      close;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name default;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      proxy_pass http://back_server;</span><br><span class="line">      proxy_read_timeout 300s;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再location中增加对websocket的转发处理</span></span><br><span class="line">      proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">      proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">      proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"></span><br><span class="line">      proxy_http_version 1.1;</span><br><span class="line">      proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">      proxy_set_header Connection <span class="variable">$connection_upgrade</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>安装zabbix小记</title>
      <link href="/852cc08a.html"/>
      <content type="html"><![CDATA[<h3 id="zabbix-server安装"><a href="#zabbix-server安装" class="headerlink" title="zabbix server安装"></a>zabbix server安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检查并安装gcc</span></span><br><span class="line">isInstallGcc=`rpm -qa | grep ^gcc`</span><br><span class="line">[ -z <span class="string">"<span class="variable">$isInstallGcc</span>"</span> ] &amp;&amp; yum install gcc -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装依赖环境</span></span><br><span class="line">yum install curl curl-devel net-snmp net-snmp-devel perl-DBI ntddate libxml2-devel</span><br><span class="line"><span class="comment">#时间同步</span></span><br><span class="line"><span class="comment">#此处有坑，必须同步！否则无法安装</span></span><br><span class="line">ntpdate time.nist.gov</span><br><span class="line"><span class="comment">#添加zabbix用户</span></span><br><span class="line">useradd zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装mariadb数据库并导入数据</span></span><br><span class="line">yum install mariadb mariadb-server mariadb-devel -y</span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line">mysqladmin -uroot password <span class="string">'mysqlpassword'</span></span><br><span class="line">mysql -uroot -pmysqlpassword</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> zabbix <span class="keyword">default</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">grant</span> all <span class="keyword">privileges</span> <span class="keyword">on</span> zabbix.* <span class="keyword">to</span> zabbix@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'zabbix'</span>;</span><br><span class="line"><span class="keyword">grant</span> all <span class="keyword">privileges</span> <span class="keyword">on</span> zabbix.* <span class="keyword">to</span> zabbix@localhost <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'zabbix'</span>;</span><br><span class="line"><span class="keyword">grant</span> all <span class="keyword">privileges</span> <span class="keyword">on</span> zabbix.* <span class="keyword">to</span> zabbix@<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'zabbix'</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">''</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压并安装zabbix</span></span><br><span class="line">tar xf zabbix-3.2.4.tar.gz &amp;&amp; <span class="built_in">cd</span> zabbix-3.2.4</span><br><span class="line">mysql -uzabbix -pzabbix zabbix &lt; /root/zabbix/database/mysql/schema.sql</span><br><span class="line">mysql -uzabbix -pzabbix zabbix &lt; /root/zabbix/database/mysql/images.sql</span><br><span class="line">mysql -uzabbix -pzabbix zabbix &lt; /root/zabbix/database/mysql/data.sql</span><br><span class="line"><span class="comment">#创建zabbix agent日志目录，并授权zabbix用户</span></span><br><span class="line">mkdir /var/<span class="built_in">log</span>/zabbix/ &amp;&amp; chown zabbix:zabbix /var/<span class="built_in">log</span>/zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压并安装zabbix</span></span><br><span class="line">tar xf zabbix-3.2.4.tar.gz &amp;&amp; <span class="built_in">cd</span> zabbix-3.2.4</span><br><span class="line">./configure --sysconfdir=/opt/zabbix --<span class="built_in">enable</span>-server --<span class="built_in">enable</span>-agent --with-net-snmp --<span class="built_in">enable</span>-java --with-libxml2 --with-libcurl --with-mysql</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#参照如下参数修改zabbix server</span></span><br><span class="line">LogFile=/var/<span class="built_in">log</span>/zabbix/zabbix_server.log</span><br><span class="line">PidFile=/tmp/zabbix_server.pid</span><br><span class="line">DBHost=localhost</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">DBSocket=/var/lib/mysql/mysql.sock</span><br><span class="line">Timeout=4</span><br><span class="line">AlertScriptsPath=/opt/zabbix/scripts</span><br><span class="line">LogSlowQueries=3000</span><br><span class="line">JavaGateway=127.0.0.1</span><br><span class="line">JavaGatewayPort=10052</span><br><span class="line">StartJavaPollers=5</span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝启动文件并</span></span><br><span class="line">cp /root/zabbix/misc/init.d/fedora/core//zabbix_agentd /etc/init.d/</span><br><span class="line">cp /root/zabbix/misc/init.d/fedora/core/zabbix_server /etc/init.d/</span><br><span class="line">/etc/init.d/zabbix_server start</span><br><span class="line">/etc/init.d/zabbix_agentd start</span><br></pre></td></tr></table></figure><h3 id="zabbix-web安装"><a href="#zabbix-web安装" class="headerlink" title="zabbix web安装"></a>zabbix web安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加并更新yum源</span></span><br><span class="line"><span class="comment">#此处有坑，默认php是php5.4版本，有些库不支持，需要php56以上版本，需要更新yum源安装php5.6版本</span></span><br><span class="line">tar xf rhel7_repo.tar.gz -C /etc/yum.repos.d/</span><br><span class="line">yum clean all &amp;&amp; yum repolst</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装php环境</span></span><br><span class="line">yum install httpd php56w php56w-devel php56w-pdo php56w-gd php56w-mysql php56w-common php56w-mbstring php56w-odbc php56w-xml php56w-bcmath php56w-pear</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改php配置</span></span><br><span class="line">vim /etc/php.ini</span><br><span class="line"><span class="comment">#配置如下</span></span><br><span class="line">max_execution_time=300</span><br><span class="line">memory_limit=128M</span><br><span class="line">post_max_size=16M</span><br><span class="line">upload_max_filesize=2M</span><br><span class="line">max_input_time=300</span><br><span class="line">date.timezone=<span class="string">"Asia/Shanghai"</span></span><br><span class="line">always_populate_raw_post_data=-1</span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝zabbi web到httpd目录</span></span><br><span class="line">cp -a  /root/zabbix/frontends/php/* /var/www/html</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动httpd</span></span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br></pre></td></tr></table></figure><h3 id="zabbix-agent安装"><a href="#zabbix-agent安装" class="headerlink" title="zabbix agent安装"></a>zabbix agent安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#检查并安装gcc</span></span><br><span class="line">isInstallGcc=`rpm -qa | grep ^gcc`</span><br><span class="line">[ -z <span class="string">"<span class="variable">$isInstallGcc</span>"</span> ] &amp;&amp; yum install gcc -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加zabbix用户</span></span><br><span class="line">useradd zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建zabbix agent日志目录，并授权zabbix用户</span></span><br><span class="line">mkdir /var/<span class="built_in">log</span>/zabbix/ &amp;&amp; chown zabbix:zabbix /var/<span class="built_in">log</span>/zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment">#解压并安装zabbix</span></span><br><span class="line">tar xf zabbix-3.2.4.tar.gz &amp;&amp; <span class="built_in">cd</span> zabbix-3.2.4</span><br><span class="line">./configure --sysconfdir=/opt/zabbix_agent --<span class="built_in">enable</span>-agent</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝启动文件和zabbix配置文件到相应目录</span></span><br><span class="line">cp misc/init.d/fedora/core/zabbix_agentd /etc/init.d/</span><br><span class="line">cp ../zabbix_agentd.conf /opt/zabbix_agent</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动zabbix客户端</span></span><br><span class="line">/etc/init.d/zabbix_agentd start</span><br></pre></td></tr></table></figure><h3 id="zabbix-proxy安装"><a href="#zabbix-proxy安装" class="headerlink" title="zabbix proxy安装"></a>zabbix proxy安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压并安装zabbix proxy</span></span><br><span class="line">tar xf zabbix-3.2.4.tar.gz &amp;&amp; <span class="built_in">cd</span> zabbix-3.2.4</span><br><span class="line">yum install gcc curl-devel libxml2-devel net-snmp-devel perl-DBI ntpdate -y</span><br><span class="line">./configure --sysconfdir=/opt/zabbix --<span class="built_in">enable</span>-proxy --<span class="built_in">enable</span>-agent --with-net-snmp --with-libxml2  --with-libcurl --with-mysql</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装mauradb并修改密码</span></span><br><span class="line">yum install mariadb mariadb-devel mariadb-server -y</span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line">mysqladmin -uroot password <span class="string">'password'</span></span><br></pre></td></tr></table></figure><p>创建数据库<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> zabbix_proxy <span class="keyword">default</span> <span class="built_in">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">grant</span> all <span class="keyword">privileges</span> <span class="keyword">on</span> zabbix.* <span class="keyword">to</span> zabbix@localhost <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'zabbix'</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></p><p>导入表结构<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uzabbix -p zabbix_proxy &lt; database/mysql/schema.sql</span><br><span class="line">mysql -uzabbix -p zabbix_proxy &lt; database/mysql/schema.sql</span><br></pre></td></tr></table></figure></p><p>zabbix proxy配置参考<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Server=1.1.1.1</span><br><span class="line">Hostname=proxysh</span><br><span class="line">LogFile=/tmp/zabbix_proxy.log</span><br><span class="line">DBName=zabbix_proxy</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=zabbix</span><br><span class="line">ConfigFrequency=60</span><br><span class="line">DataSenderFrequency=60</span><br><span class="line">Timeout=4</span><br><span class="line">LogSlowQueries=3000</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动zabbixproxy</span></span><br><span class="line">zabbix_proxy</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> linux,运维 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>go冒泡算法及简单优化</title>
      <link href="/ce7d7117.html"/>
      <content type="html"><![CDATA[<p>冒泡排序，在学习编程时最常见的一个排序算法。但在实际工作中会遇到一些坑。比如，如果接收到的是已经排好序的序列，再进行排序没有必要。<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"math/rand"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">冒泡排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bubble</span><span class="params">(ints []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(ints); i++ &#123;</span><br><span class="line">flag := <span class="number">0</span><span class="comment">//增加标记位</span></span><br><span class="line"><span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="built_in">len</span>(ints)-i<span class="number">-1</span>; j++ &#123;</span><br><span class="line"><span class="keyword">if</span> ints[j] &gt; ints[j+<span class="number">1</span>] &#123;</span><br><span class="line">ints[j], ints[j+<span class="number">1</span>] = ints[j+<span class="number">1</span>], ints[j]</span><br><span class="line">flag++  <span class="comment">//当发生数据交换，则修改标记位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> flag == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">break</span> <span class="comment">//判断标记位是否修改，未修改则表示是顺序序列，跳出循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">arrs := []<span class="keyword">int</span>&#123;&#125;</span><br><span class="line"><span class="comment">/*生成100个1000以内的随机数*/</span></span><br><span class="line">rand.Seed(time.Now().Unix())</span><br><span class="line"><span class="keyword">for</span> n := <span class="number">0</span>; n &lt;= <span class="number">100</span>; n++ &#123;</span><br><span class="line">arrs = <span class="built_in">append</span>(arrs, rand.Int()%<span class="number">1000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*go的优化，传入slice或者map，默认传入指针类型</span></span><br><span class="line"><span class="comment">所以这里直接将arrs作为传入传出参数使用*/</span></span><br><span class="line">bubble(arrs) </span><br><span class="line">fmt.Println(arrs)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>GO监控linux下目录操作</title>
      <link href="/8332b34c.html"/>
      <content type="html"><![CDATA[<p>对于linux有个inotify机制想必各linuxer都是知道的，最近在学习GO语言想使用go实现inotify-toos的一些功能，比如发现指定目录下的新建文件，关闭文件等操作。起初使用github上<code>fsnotify/fsnotify</code>发现无法监控到write_close状态，经过一些时间的搜寻发现<code>ericbrisrubio/fsnotify</code>支持linux原生的inotify机制。下面是代码：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"io/ioutil"</span></span><br><span class="line">    <span class="string">"os"</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"github.com/ericbrisrubio/fsnotify"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    filename := os.Args[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">go</span> watchDir(filename)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">将监控主函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">watchDir</span><span class="params">(filename <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">    watch, _ := fsnotify.NewWatcher()</span><br><span class="line">    <span class="keyword">defer</span> watch.Close()</span><br><span class="line"></span><br><span class="line">    err := watch.Watch(filename)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Errorf(<span class="string">"监听目录失败：%v"</span>, err.Error())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把指定目录下的所有目录都加入监控</span></span><br><span class="line">    <span class="keyword">for</span> _, k := <span class="keyword">range</span> listDir(filename) &#123;</span><br><span class="line">        watch.Watch(fmt.Sprintf(<span class="string">"%s/%s"</span>, filename, k))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="keyword">select</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> event := &amp;lt;-watch.Event:</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> event.IsCreate() &#123;</span><br><span class="line">                    fmt.Println(event.Name, <span class="string">" create"</span>)</span><br><span class="line">                    <span class="comment">//发现创建的文件是目录，则加入监控</span></span><br><span class="line">                    <span class="keyword">if</span> isDir(event.Name) &#123;</span><br><span class="line">                        watch.Watch(event.Name)</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//发现文件被写入关闭则写入消息队列</span></span><br><span class="line">                <span class="keyword">if</span> event.IsCloseWrite() &#123;</span><br><span class="line">                    fmt.Println(event.Name, <span class="string">" Close write"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> err := &amp;lt;-watch.Error:</span><br><span class="line">            &#123;</span><br><span class="line">                fmt.Errorf(<span class="string">"Err:%v"</span>, err)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">检查是否是目录</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isDir</span><span class="params">(path <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    stat, err := os.Stat(path)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Errorf(<span class="string">"%v"</span>, err.Error())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stat.IsDir()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">递归列出所有目录</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">listDir</span><span class="params">(path <span class="keyword">string</span>)</span> []<span class="title">string</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> dirlist []<span class="keyword">string</span></span><br><span class="line">    fileList, err := ioutil.ReadDir(path)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Errorf(<span class="string">"list %s err:%v"</span>, path, err.Error())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> _, fileName := <span class="keyword">range</span> fileList &#123;</span><br><span class="line">        <span class="keyword">if</span> fileName.IsDir() &#123;</span><br><span class="line">            dirlist = <span class="built_in">append</span>(dirlist, fmt.Sprintf(<span class="string">"%s"</span>, fileName.Name()))</span><br><span class="line">            <span class="keyword">for</span> _, k := <span class="keyword">range</span> listDir(fmt.Sprintf(<span class="string">"%s/%s"</span>, path, fileName.Name())) &#123;</span><br><span class="line">                dirlist = <span class="built_in">append</span>(dirlist, fmt.Sprintf(<span class="string">"%s/%s"</span>, fileName.Name(), k))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dirlist</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux下安装go开发环境</title>
      <link href="/dc7545ea.html"/>
      <content type="html"><![CDATA[<h3 id="下载GO二进制包"><a href="#下载GO二进制包" class="headerlink" title="下载GO二进制包"></a>下载GO二进制包</h3><p>打开go中文社区的go二进制包<a href="https://studygolang.com/dl" target="_blank" rel="noopener">下载页面</a>,下载对应环境的安装包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#找个地儿放go源码包</span></span><br><span class="line">mkdir /opt/go/&#123;golang,gopath&#125;</span><br><span class="line">tar xf go1.10.3.linux-amd64.tar.gz</span><br><span class="line">cp -r go/* /opt/go/golang</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置goroot和gopath</span></span><br><span class="line"><span class="comment">#说明：goroot环境变量是指定go原生工具包所在位置</span></span><br><span class="line"><span class="comment">#     gopath环境变量是指定go第三方包和自定义包所在位置</span></span><br><span class="line"><span class="comment">#     我这里对gopath进行了拆分，将第三方和自己写的代码分开管理</span></span><br><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="built_in">export</span> GOROOT=/opt/go/golang</span><br><span class="line"><span class="built_in">export</span> GOPATH=/opt/go/gopath:/home/user/go</span><br><span class="line">GOOBIN=/opt/go/gopath/bin:/home/user/go/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$GOROOT</span>/bin:<span class="variable">$GOOBIN</span>:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p><h3 id="安装go工具包"><a href="#安装go工具包" class="headerlink" title="安装go工具包"></a>安装go工具包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">go get -u -v github.com/nsf/gocode</span><br><span class="line">go get -u -v github.com/rogpeppe/godef</span><br><span class="line">go get -u -v github.com/golang/lint/golint</span><br><span class="line">go get -u -v github.com/lukehoban/go-outline</span><br><span class="line">go get -u -v sourcegraph.com/sqs/goreturns</span><br><span class="line">go get -u -v golang.org/x/tools/cmd/gorename</span><br><span class="line">go get -u -v github.com/tpng/gopkgs</span><br><span class="line">go get -u -v github.com/newhook/go-symbols</span><br><span class="line">go get -u -v golang.org/x/tools/cmd/guru</span><br></pre></td></tr></table></figure><p>其中<code>golang.org</code>中的包没有梯子的情况下无法直接<code>go get</code>,可以从github上下载安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/go/gopath/golang.org/x</span><br><span class="line"><span class="built_in">cd</span> /opt/go/gopath/golang.org/x</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/golang/text.git</span><br></pre></td></tr></table></figure></p><h3 id="安装go编辑器"><a href="#安装go编辑器" class="headerlink" title="安装go编辑器"></a>安装go编辑器</h3><h4 id="vscode版本"><a href="#vscode版本" class="headerlink" title="vscode版本"></a>vscode版本</h4><ul><li><p>rhel系列安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc</span><br><span class="line">sudo sh -c <span class="string">'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" &gt; /etc/yum.repos.d/vscode.repo'</span></span><br><span class="line">sudo yum repolist</span><br><span class="line">sudo yum install code</span><br></pre></td></tr></table></figure></li><li><p>debian系列安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; microsoft.gpg</span><br><span class="line">sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg</span><br><span class="line">sudo sh -c <span class="string">'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" &gt; /etc/apt/sources.list.d/vscode.list'</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install code</span><br></pre></td></tr></table></figure></li></ul><p>打开vscode，在扩展中搜索<code>go</code>并安装即可</p>]]></content>
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>redis集群方案</title>
      <link href="/3a675749.html"/>
      <content type="html"><![CDATA[<h3 id="redis-cluster-predixy-keepalived"><a href="#redis-cluster-predixy-keepalived" class="headerlink" title="redis cluster + predixy + keepalived"></a>redis cluster + predixy + keepalived</h3><p>redis使用官方的redis cluster集群方案。因为redis cluster是散列模型，需读对开发提供所有redis节点的访问地址，于是使用predixy对redis cluster节点进行代理。再使用keepalived对predixy进行高可用    </p><ul><li>规划IP如下</li></ul><table><thead><tr><th>IP</th><th>功能</th></tr></thead><tbody><tr><td>192.168.1.10</td><td>VIP</td></tr><tr><td>192.168.1.11</td><td>redis-node-1</td></tr><tr><td>192.168.1.12</td><td>redis-node-2</td></tr><tr><td>192.168.1.13</td><td>redis-node-3</td></tr></tbody></table><blockquote><p>每台redis节点上运行两个redis实例<br>所有节点关闭防火墙和selinux</p></blockquote><h2 id="创建redis-cluster"><a href="#创建redis-cluster" class="headerlink" title="创建redis cluster"></a>创建redis cluster</h2><h3 id="0x01-redis安装"><a href="#0x01-redis安装" class="headerlink" title="0x01 redis安装"></a>0x01 redis安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc -y</span><br><span class="line">tar xf redis-4.0.9.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-4.0.9</span><br><span class="line">make MALLOC=libc</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="0x02-创建redis配置文件"><a href="#0x02-创建redis配置文件" class="headerlink" title="0x02 创建redis配置文件"></a>0x02 创建redis配置文件</h3><blockquote><p>配置说明<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">port 7000      <span class="comment">#监听的端口号</span></span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0   <span class="comment">#监听IP</span></span><br><span class="line">cluster-enabled yes   <span class="comment">#开始cluster模式</span></span><br><span class="line">cluster-config-file /opt/redis-master/nodes-7000.conf   <span class="comment">#cluster配置文件，这西写好路径自是生成</span></span><br><span class="line">cluster-node-timeout 15000      <span class="comment">#节点超时时间</span></span><br><span class="line">cluster-require-full-coverage no  <span class="comment">#槽全覆盖,设置为no。避免因为节点宕机导致槽未全覆盖导致集大宕机</span></span><br><span class="line">daemonize yes       <span class="comment">#后台运行</span></span><br><span class="line">logfile /opt/redis-master/redis.log   <span class="comment">#日志文件记录地址</span></span><br><span class="line">appendonly yes    <span class="comment">#数据写入硬盘，保证数据持久化</span></span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/redis-&#123;master,slave&#125;</span><br><span class="line"><span class="comment">#master的配置文件</span></span><br><span class="line">vim /opt/redis-master/redis-master.conf</span><br><span class="line">port 7000 </span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0 </span><br><span class="line">cluster-enabled yes  </span><br><span class="line">cluster-config-file /opt/redis-master/nodes-7000.conf </span><br><span class="line">cluster-node-timeout 15000  </span><br><span class="line">cluster-require-full-coverage no </span><br><span class="line">daemonize yes    </span><br><span class="line">logfile /opt/redis-master/redis.log </span><br><span class="line">appendonly yes  </span><br><span class="line">dir /opt/redis-master                            </span><br><span class="line"></span><br><span class="line"><span class="comment">#slave的配置文件</span></span><br><span class="line">vim /opt/redis-slave/redis-slave.conf</span><br><span class="line">port 7001 </span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0 </span><br><span class="line">cluster-enabled yes  </span><br><span class="line">cluster-config-file /opt/redis-slave/nodes-7001.conf </span><br><span class="line">cluster-node-timeout 15000  </span><br><span class="line">cluster-require-full-coverage no </span><br><span class="line">daemonize yes    </span><br><span class="line">logfile /opt/redis-slave/redis.log </span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><h3 id="0x03-开启redis"><a href="#0x03-开启redis" class="headerlink" title="0x03 开启redis"></a>0x03 开启redis</h3><p>在三台redis node上创建配置文件后启动redis实例<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-server /opt/redis-master/redis-master.conf</span><br><span class="line">redis-server /opt/redis-slave/redis-slave.conf</span><br></pre></td></tr></table></figure></p><h3 id="0x04-创建redis-cluster集群"><a href="#0x04-创建redis-cluster集群" class="headerlink" title="0x04 创建redis cluster集群"></a>0x04 创建redis cluster集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#由于redis-trib.rb依赖ruby，而且redis 4.0以上需要ruby2.2.2以上版本。</span></span><br><span class="line"><span class="comment">#而yum仓库里的ruby是2.0本版，所以需要手工安装ruby</span></span><br><span class="line">yum install rubygems</span><br><span class="line">curl -sSL https://rvm.io/mpapis.asc | gpg2 --import -</span><br><span class="line">curl -L get.rvm.io | bash -s stable</span><br><span class="line"><span class="built_in">source</span> /etc/profile.d/rvm.sh</span><br><span class="line">rvm install  2.4.0</span><br><span class="line">rvm use  2.4.0</span><br><span class="line">gem install redis</span><br><span class="line"></span><br><span class="line"><span class="comment">#ruby基础环境安装好之后，创建redis集群</span></span><br><span class="line"><span class="comment">#参数说明 create 创建  replicas 分片模式 1 就是分片模式 1master 对应 1slave</span></span><br><span class="line">./redis-4.0.9/src/redis-trib.rb create --replicas 1 192.168.1.11:7000 192.168.1.12:7000 192.168.1.13:7000 192.168.1.11:7001 192.168.1.12:7001 192.168.1.13:7001</span><br></pre></td></tr></table></figure><h2 id="创建predixy代理"><a href="#创建predixy代理" class="headerlink" title="创建predixy代理"></a>创建predixy代理</h2><h3 id="0x01-安装predixy"><a href="#0x01-安装predixy" class="headerlink" title="0x01 安装predixy"></a>0x01 安装predixy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/joyieldInc/predixy.git</span><br><span class="line"><span class="built_in">cd</span> predixy</span><br><span class="line">make </span><br><span class="line">cp src/predixy /bin</span><br></pre></td></tr></table></figure><h3 id="0x02-创建predixy配置文件"><a href="#0x02-创建predixy配置文件" class="headerlink" title="0x02 创建predixy配置文件"></a>0x02 创建predixy配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/predixy</span><br><span class="line">cp conf/* /opt/predixy</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改主配置文件</span></span><br><span class="line">vim /opt/predixy/predixy.conf</span><br><span class="line"><span class="comment">#配置如下</span></span><br><span class="line">Name RedisCluster  <span class="comment">#修改集群名称</span></span><br><span class="line">Bind 0.0.0.0:7003  <span class="comment">#修改监听地址和IP</span></span><br><span class="line">WorkerThreads 4    <span class="comment">#开启的线程</span></span><br><span class="line">ClientTimeout 300 </span><br><span class="line">LogVerbSample 0 </span><br><span class="line">LogDebugSample 0</span><br><span class="line">LogInfoSample 10000</span><br><span class="line">LogNoticeSample 1</span><br><span class="line">LogWarnSample 1</span><br><span class="line">LogErrorSample 1 </span><br><span class="line">Include auth.conf </span><br><span class="line">Include cluster.conf  <span class="comment">#注释掉 include try.conf 开启 cluster.conf</span></span><br><span class="line">Include latency.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改cluster配置文件</span></span><br><span class="line">vim /opt/predixy/cluster.conf</span><br><span class="line"><span class="comment">#配置如下</span></span><br><span class="line">ClusterServerPool &#123;</span><br><span class="line">    MasterReadPriority 60</span><br><span class="line">    StaticSlaveReadPriority 50</span><br><span class="line">    DynamicSlaveReadPriority 50 </span><br><span class="line">    RefreshInterval 1   </span><br><span class="line">    ServerTimeout 1  </span><br><span class="line">    ServerFailureLimit 10</span><br><span class="line">    ServerRetryTimeout 1</span><br><span class="line">    KeepAlive 120 </span><br><span class="line">    Servers &#123; </span><br><span class="line">        + 192.168.1.11:7000  </span><br><span class="line">        + 192.168.1.12:7000 </span><br><span class="line">        + 192.168.1.13:7000 </span><br><span class="line">        + 192.168.1.11:7001 </span><br><span class="line">        + 192.168.1.12:7001 </span><br><span class="line">        + 192.168.1.13:7001 </span><br><span class="line">    &#125;                       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x03-启动代理"><a href="#0x03-启动代理" class="headerlink" title="0x03 启动代理"></a>0x03 启动代理</h3><p>代理部署到三个节点上，同样配置，并启动代理<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsid predixy /opt/predixy/predixy.conf &gt;&gt; /opt/predixy/predixy.log</span><br></pre></td></tr></table></figure></p><h2 id="部署keepalived"><a href="#部署keepalived" class="headerlink" title="部署keepalived"></a>部署keepalived</h2><h3 id="0x01-安装keepalived"><a href="#0x01-安装keepalived" class="headerlink" title="0x01 安装keepalived"></a>0x01 安装keepalived</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum insall keepalived -y</span><br></pre></td></tr></table></figure><h3 id="0x02-修改keepalived配置文件"><a href="#0x02-修改keepalived配置文件" class="headerlink" title="0x02 修改keepalived配置文件"></a>0x02 修改keepalived配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/keepalived/keepalived.conf</span><br><span class="line"><span class="comment">#配置如下</span></span><br><span class="line"><span class="comment">#拷贝配置文件到三个节点上，并且修改priority 建议改为每个节点IP第四位</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived </span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id REDIS_PROXY </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP    </span><br><span class="line">    interface ens160 </span><br><span class="line">    virtual_router_id 10</span><br><span class="line">    priority 11  </span><br><span class="line">    advert_int 1 </span><br><span class="line">    nopreempt  </span><br><span class="line">    authentication &#123;  </span><br><span class="line">        auth_type PASS </span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;   </span><br><span class="line">    virtual_ipaddress &#123; </span><br><span class="line">        192.168.1.10  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x03-启动keepalived并且创建守护脚本"><a href="#0x03-启动keepalived并且创建守护脚本" class="headerlink" title="0x03 启动keepalived并且创建守护脚本"></a>0x03 启动keepalived并且创建守护脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动keepalived</span></span><br><span class="line">systemctl start keepalived</span><br><span class="line"></span><br><span class="line"><span class="comment">#编写守护脚本</span></span><br><span class="line">mkdir /opt/scripts</span><br><span class="line">vim /opt/scripts/pdwatch.sh</span><br><span class="line"><span class="comment">#脚本内容</span></span><br><span class="line"><span class="meta">#!/bin/bash   </span></span><br><span class="line">CMD=<span class="string">"predixy /opt/predixy/predixy.conf"</span> </span><br><span class="line"><span class="keyword">while</span> : </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">        k=`ps aux | grep predixy | grep -v grep` </span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$k</span>"</span> ]   </span><br><span class="line">        <span class="keyword">then</span>  </span><br><span class="line">                setsid <span class="variable">$CMD</span> &amp;&gt; /opt/predixy/predixy.log &amp; </span><br><span class="line">                sleep 2  </span><br><span class="line">                k=`ps aux | grep predixy | grep -v grep`  </span><br><span class="line">                <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$k</span>"</span> ]  </span><br><span class="line">                <span class="keyword">then</span>  </span><br><span class="line">                        systemctl stop keepalived </span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#启动守护脚本</span></span><br><span class="line">setsid /opt/scripts/pdwatch.sh &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>kvm虚拟机常用命令</title>
      <link href="/4d303d16.html"/>
      <content type="html"><![CDATA[<p>KVM虚拟化之命令行管理虚拟机</p><h3 id="vrish命令"><a href="#vrish命令" class="headerlink" title="vrish命令"></a>vrish命令</h3><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>virsh</td><td>进入KVM交互操作</td></tr><tr><td>virsh nodeinfo</td><td>查看物理机 信息</td></tr><tr><td>virsh list / virsh list –all</td><td>查看虚拟机列表</td></tr><tr><td>virsh dominfo 虚拟机名</td><td>查看指定虚拟机信息</td></tr><tr><td>virsh start 虚拟机名</td><td>开启指定虚拟机 </td></tr><tr><td>virsh destroy 虚拟机名</td><td>强制关闭虚拟机</td></tr><tr><td>virsh shutdown 虚拟机名</td><td>关机虚拟机</td></tr><tr><td>virsh autostart 虚拟机名</td><td>开机自启指定虚拟机</td></tr><tr><td>virsh autostart –disable 虚拟机名</td><td>取消指定虚拟机到开机自启</td></tr><tr><td>virsh dumpxml 虚拟机名</td><td>查看指定虚拟机的配置文件</td></tr><tr><td>virsh define 配置文件</td><td>从指定文件导入一台虚拟机</td></tr><tr><td>virsh undefine 虚拟机名</td><td>移除一台虚拟机，但不删除虚拟机的磁盘文件 </td></tr><tr><td>virsh edit 虚拟名</td><td>编辑一台虚拟机配置，在修改title和uuid的情况下重新生成新的虚拟机</td></tr></tbody></table><p><strong>UUID生成工具</strong><br><code>uuidgen</code></p><h3 id="kvm虚拟机配置文件"><a href="#kvm虚拟机配置文件" class="headerlink" title="kvm虚拟机配置文件"></a>kvm虚拟机配置文件</h3><p><code>/etc/libvirt/qemu/虚拟机名.xml</code></p><h3 id="调整虚拟机设置"><a href="#调整虚拟机设置" class="headerlink" title="调整虚拟机设置"></a>调整虚拟机设置</h3><ol><li><p>导出虚拟机配置<br><code>virsh dumpxml 虚拟机名 &gt; /dirname/filename</code></p></li><li><p>修改导出后的配置<br><code>vim /dirname/filename</code></p></li><li><p>导入修改后的配置文件<br><code>virsh define /dirname/filename</code> </p></li></ol><h4 id="改名虚拟机rh6-n1为rhel6-node1"><a href="#改名虚拟机rh6-n1为rhel6-node1" class="headerlink" title="改名虚拟机rh6_n1为rhel6_node1"></a>改名虚拟机rh6_n1为rhel6_node1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">virsh dumpxml rhel_n1 &gt; /root/new.xml</span><br><span class="line">vim /root/new.xml</span><br><span class="line">virsh define /root/new.xml</span><br><span class="line">virsh undefine rh6_n1</span><br></pre></td></tr></table></figure><h4 id="复制虚拟机rhel6-node1"><a href="#复制虚拟机rhel6-node1" class="headerlink" title="复制虚拟机rhel6_node1"></a>复制虚拟机rhel6_node1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">virsh dumpxml rhel6_node1 &gt; /root/copy.xml</span><br><span class="line">vim /root/copy.xml</span><br><span class="line">cd /data/images</span><br><span class="line">cp node1.img node2.img</span><br><span class="line">virsh define /root/copy.xml</span><br></pre></td></tr></table></figure><h3 id="kvm虚拟机操作"><a href="#kvm虚拟机操作" class="headerlink" title="kvm虚拟机操作"></a>kvm虚拟机操作</h3><p><code>virsh edit 虚拟机</code><br><code>virt-clone -o 已有虚拟机名 -n 新虚拟机名 -f 克隆的虚拟机磁盘文件</code><br><code>virsh net-edit 网卡名</code><br><code>virsh net-destroy 网卡名</code><br><code>virsh net-start 网卡名</code></p><h3 id="虚拟机磁盘类型"><a href="#虚拟机磁盘类型" class="headerlink" title="虚拟机磁盘类型"></a>虚拟机磁盘类型</h3><ul><li>raw 原始类型</li><li>qcow2 </li></ul><h4 id="qcow磁盘操作"><a href="#qcow磁盘操作" class="headerlink" title="qcow磁盘操作"></a>qcow磁盘操作</h4><ul><li><code>qemu-img create -f qcow2 /data/images/disk1.img 100G</code></li></ul><h4 id="转换虚拟机磁盘类型"><a href="#转换虚拟机磁盘类型" class="headerlink" title="转换虚拟机磁盘类型"></a>转换虚拟机磁盘类型</h4><ol><li><p>转换磁盘文件类型<br><code>qemu-img convert -O qcow2 -c /data/images/node2.img /data/images/node2.qcow2</code></p></li><li><p>修改虚拟机配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">virsh edit rhel6_node2</span><br><span class="line">    &lt;disk type=&apos;file&apos; device=&apos;disk&apos;&gt;</span><br><span class="line">      &lt;driver name=&apos;qemu&apos; type=&apos;qcow2&apos; cache=&apos;none&apos;/&gt;     //更改type的raw为qcow2</span><br><span class="line">      &lt;source file=&apos;/data/images/node2.qcow2&apos;/&gt;           //更改file的磁盘文件路径   </span><br><span class="line">      &lt;target dev=&apos;vda&apos; bus=&apos;virtio&apos;/&gt;</span><br><span class="line">      &lt;address type=&apos;pci&apos; domain=&apos;0x0000&apos; bus=&apos;0x00&apos; slot=&apos;0x06&apos; function=&apos;0x0&apos;/&gt;</span><br><span class="line">    &lt;/disk&gt;</span><br></pre></td></tr></table></figure></li><li><p>删除旧虚拟机磁盘文件<br><code>rm -rf /data/images/node2.img</code></p></li></ol><h4 id="快速创建虚拟机"><a href="#快速创建虚拟机" class="headerlink" title="快速创建虚拟机"></a>快速创建虚拟机</h4><ol><li><p>准备硬盘，使用copy on write方式<br><code>qemu-img create -f qcow2 -b oldimg newimg</code></p></li><li><p>修改虚拟机配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh edit oldgues</span><br><span class="line">修改uuid title disk interface 参数</span><br></pre></td></tr></table></figure></li></ol><h4 id="qemu磁盘快照"><a href="#qemu磁盘快照" class="headerlink" title="qemu磁盘快照"></a>qemu磁盘快照</h4><p>qemu最对qcow格式的磁盘文件建立快照</p><ul><li><code>qemu-img snapshot -c 快照名 磁盘名</code>  创建快照</li><li><code>qemu-img snapshot -l 磁盘名</code>  查看磁盘对应的快照</li><li><code>qemu-img snapshot -a 快照名 磁盘名</code> 恢复快照</li><li><code>qemu-img snapshot -d 快照名 磁盘名</code> 删除指定快照</li></ul><h4 id="从命令创建虚拟机"><a href="#从命令创建虚拟机" class="headerlink" title="从命令创建虚拟机"></a>从命令创建虚拟机</h4><p><code>qemu-img create -f qcow2 /data/images/muban.qcow2</code><br><code>virt-install --name vpcname --vcpus=1 --ram=1024 --diks path=/data/images/vpcname.qcow2,format=qcow2 --network netowrk=private1 --pxe</code></p><h3 id="从模板快速创建虚拟机"><a href="#从模板快速创建虚拟机" class="headerlink" title="从模板快速创建虚拟机"></a>从模板快速创建虚拟机</h3><p>最后附上我自己写的脚本，用于从模板快速克隆虚拟机<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 使用此脚本之前需要先创建一个KVM虚拟机，</span></span><br><span class="line"><span class="comment"># 磁盘格式为qcow2。并且把模板虚拟机的xml</span></span><br><span class="line"><span class="comment"># 拷贝到$basedir目录下，命名为base.xml</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"不告诉我虚拟机名字，我给你克隆到哪？"</span></span><br><span class="line"><span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">basedir=/home/mk/kvm_img</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> vmname <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$basedir</span>/<span class="variable">$vmname</span>.qcow2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"大哥！有这个虚拟机的磁盘文件，我可不给你克隆！"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">vmxml=/tmp/<span class="variable">$vmname</span>.xml</span><br><span class="line">uuid=`uuidgen`</span><br><span class="line"><span class="built_in">let</span> mac=<span class="variable">$RANDOM</span>%100</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$mac</span> -lt 10 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">mac=<span class="string">"0<span class="variable">$mac</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">cp <span class="variable">$basedir</span>/base.xml <span class="variable">$vmxml</span></span><br><span class="line">qemu-img create -f qcow2 -b <span class="variable">$basedir</span>/base.qcow2 <span class="variable">$basedir</span>/<span class="variable">$vmname</span>.qcow2 &amp;&gt; /dev/null</span><br><span class="line">sed -i <span class="string">"s/&lt;uuid&gt;.*&lt;/&lt;uuid&gt;<span class="variable">$uuid</span>&lt;/"</span>  <span class="variable">$vmxml</span></span><br><span class="line">sed -i <span class="string">"s/base/<span class="variable">$vmname</span>/g"</span> <span class="variable">$vmxml</span></span><br><span class="line">sed -i <span class="string">"s/e7/<span class="variable">$mac</span>/g"</span> <span class="variable">$vmxml</span></span><br><span class="line">virsh define <span class="variable">$vmxml</span></span><br><span class="line"></span><br><span class="line">rm -rf <span class="variable">$vmxml</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>mysql学习笔记</title>
      <link href="/295082ac.html"/>
      <content type="html"><![CDATA[<h2 id="mysql数据库"><a href="#mysql数据库" class="headerlink" title="mysql数据库"></a>mysql数据库</h2><p>MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><h3 id="mysql数据库安装"><a href="#mysql数据库安装" class="headerlink" title="mysql数据库安装"></a>mysql数据库安装</h3><p>安装mysql数据库，5.6版本开始的数据库，会在<code>~/.mysql_secret</code>生成随机密码<br>使用随机密码串登录mysql后，需要修改<code>root</code>密码才能进行操作<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /root/.mysql_secret </span><br><span class="line"><span class="comment"># The random password set for the root user at Thu Sep  8 10:35:16 2016 (local time): zUtb3keu</span></span><br><span class="line">mysql -uroot -pzUtb3keu</span><br><span class="line">mysql&gt; <span class="built_in">set</span> password <span class="keyword">for</span> root@<span class="string">"localhost"</span>=password(<span class="string">"123456"</span>);  <span class="comment">#修改root用户的密码</span></span><br></pre></td></tr></table></figure></p><h3 id="mysql数据库存储过程"><a href="#mysql数据库存储过程" class="headerlink" title="mysql数据库存储过程"></a>mysql数据库存储过程</h3><h4 id="mysql库操作"><a href="#mysql库操作" class="headerlink" title="mysql库操作"></a>mysql库操作</h4><p><strong>mysql库名命名规则：</strong> </p><blockquote><ol><li>库名可以使用数字、字母和下划线，但不允许纯纯数字</li><li>库名必须具有唯一性</li><li>库名区分大小写</li><li>库名不能使用特殊字符和sql关键字</li></ol></blockquote><ul><li>查看已有的库 <code>show databases;</code></li><li>创建新库    <code>create database newdata;</code></li><li>切换库    <code>use database newdata;</code></li><li>显示当前所在库 <code>select database();</code></li><li>删除已有库    <code>drop database newdata;</code></li><li>显示当前库已有的表 <code>show tables;</code>   需要进入库才能操作哦</li></ul><h4 id="mysql表操作"><a href="#mysql表操作" class="headerlink" title="mysql表操作"></a>mysql表操作</h4><ul><li><p>新建表<br>  <code>create table 表名(字段1 类型，字段2 类型，字段3 类型);</code></p></li><li><p>查看表中的内容<br>  <code>select 字段1,字段2,字段3 from 表名;</code></p></li></ul><ul><li><p>查看表结构<br>  <code>desc 表名;</code></p></li><li><p>向表中插入数据<br>  <code>insert into 表名 values(字段类表);</code></p></li><li><p>删除表记录<br>  <code>delect * from 表名;</code></p></li><li><p>删除表<br>  <code>drop table 表名;</code></p></li></ul><h4 id="mysql数据类型"><a href="#mysql数据类型" class="headerlink" title="mysql数据类型"></a>mysql数据类型</h4><table><thead><tr><th>关键字</th><th>长度</th><th>范围有符号</th><th>范围无符号</th><th>功能</th></tr></thead><tbody><tr><td>char</td><td>255字节</td><td>*</td><td>*</td><td>字符类型</td></tr><tr><td>varchar</td><td>65532字节</td><td>*</td><td>*</td><td>变长字符</td></tr><tr><td>blob/text</td><td>大于65532</td><td>*</td><td>*</td><td>大文本类型</td></tr><tr><td>tinyint</td><td>1字节</td><td>-128~127</td><td>0~255</td><td>微整型</td></tr><tr><td>smallint</td><td>2字节</td><td>-32768~32767</td><td>0~65535</td><td>小整型</td></tr><tr><td>mediumint</td><td>3字节</td><td>-2^23~2^23-1</td><td>0~2^24-1</td><td>中整型</td></tr><tr><td>int</td><td>4字节</td><td>-2^31~2^31-1</td><td>0~2^32-1</td><td>大整型</td></tr><tr><td>bigint</td><td>8字节</td><td>-2^63~2^63-1</td><td>0~2^64-1</td><td>极大整型</td></tr><tr><td>float</td><td>4字节</td><td>*</td><td>*</td><td>单精度浮点类型</td></tr><tr><td>double</td><td>8字节</td><td>*</td><td>*</td><td>双精度浮点类型</td></tr><tr><td>year</td><td>*</td><td>*</td><td>*</td><td>年(YYYY)</td></tr><tr><td>date</td><td>*</td><td>*</td><td>*</td><td>月日(YYYYMMDD)</td></tr><tr><td>time</td><td>*</td><td>*</td><td>*</td><td>时间(HHMMSS)</td></tr><tr><td>datetime</td><td>*</td><td>*</td><td>*</td><td>年月日时分秒(YYYYMMDDHHMMSS)</td></tr><tr><td>timestamp</td><td>*</td><td>*</td><td>*</td><td>年月日时分秒(YYYYMMDDHHMMSS)</td></tr></tbody></table><p><strong>注：</strong></p><blockquote><p><code>datetime</code>和<code>timestamp</code>类型的区别是，如果不给datetime赋值则默认为null，而如果不给timestamp赋值则使用当前系统时间复制<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table table_time(time1 datetime,time2 timestamp);</span><br><span class="line">mysql&gt; insert into table_time values(now(),now());</span><br><span class="line">mysql&gt; insert into table_time(time1)values(19911205);</span><br><span class="line">mysql&gt; insert into table_time(time2)values(19920206);</span><br><span class="line">mysql&gt; select * from table_time;</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">| time1               | time2               |</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">| 2016-09-08 16:45:24 | 2016-09-08 16:45:24 |</span><br><span class="line">| 1991-12-05 00:00:00 | 2016-09-08 16:45:49 |</span><br><span class="line">| NULL                | 1992-02-06 00:00:00 |</span><br><span class="line">+---------------------+---------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="mysql时间函数"><a href="#mysql时间函数" class="headerlink" title="mysql时间函数"></a>mysql时间函数</h4><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>now()</td><td>获取当前时间</td></tr><tr><td>year()</td><td>截取给定时间中的年分</td></tr><tr><td>month()</td><td>截取给定时间中的月份</td></tr><tr><td>date()</td><td>截取给定时间中的月日</td></tr><tr><td>day()</td><td>截取给定时间中的日期</td></tr><tr><td>time()</td><td>截取给定时间中的时间</td></tr></tbody></table><h4 id="mysql枚举和列表"><a href="#mysql枚举和列表" class="headerlink" title="mysql枚举和列表"></a>mysql枚举和列表</h4><p>mysql中有两个选择型数据类型:枚举和列表<br>枚举类型只能在给定的值中选择一个，而列表类型可以在给定的值中选择多个。但这两种类型有一个共同点，只能在给定的值中选择。</p><ul><li>枚举 enum()</li><li>列表 set()</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table t6(</span><br><span class="line">    -&gt; name char(10),</span><br><span class="line">    -&gt; birthday datetime,</span><br><span class="line">    -&gt; sex enum(&quot;boy&quot;,&quot;girl&quot;,&quot;other&quot;),</span><br><span class="line">    -&gt; likes set(&quot;reading&quot;,&quot;sleeping&quot;,&quot;football&quot;)</span><br><span class="line">    -&gt; );</span><br><span class="line">mysql&gt; desc t6;</span><br><span class="line">+----------+--------------------------------------+------+-----+---------+-------+</span><br><span class="line">| Field    | Type                                 | Null | Key | Default | Extra |</span><br><span class="line">+----------+--------------------------------------+------+-----+---------+-------+</span><br><span class="line">| name     | char(10)                             | YES  |     | NULL    |       |</span><br><span class="line">| birthday | datetime                             | YES  |     | NULL    |       |</span><br><span class="line">| sex      | enum(&apos;boy&apos;,&apos;girl&apos;,&apos;other&apos;)           | YES  |     | NULL    |       |</span><br><span class="line">| likes    | set(&apos;reading&apos;,&apos;sleeping&apos;,&apos;football&apos;) | YES  |     | NULL    |       |</span><br><span class="line">+----------+--------------------------------------+------+-----+---------+-------</span><br><span class="line">mysql&gt; insert into t6 values(&quot;mazhen&quot;,now(),&quot;girl&quot;,&quot;sleeping,football&quot;);</span><br><span class="line">mysql&gt; select * from t6;</span><br><span class="line">+--------+---------------------+------+-------------------+</span><br><span class="line">| name   | birthday            | sex  | likes             |</span><br><span class="line">+--------+---------------------+------+-------------------+</span><br><span class="line">| mazhen | 2016-09-08 16:59:56 | girl | sleeping,football |</span><br><span class="line">+--------+---------------------+------+-------------------+</span><br></pre></td></tr></table></figure><h4 id="mysql约束条件"><a href="#mysql约束条件" class="headerlink" title="mysql约束条件"></a>mysql约束条件</h4><p><code>not null</code>  不允许字段为空<br><code>default</code>   给字段设置默认值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create table t7(</span><br><span class="line">    -&gt; name char(10) not null,</span><br><span class="line">    -&gt; age int(5) not null default 20,</span><br><span class="line">    -&gt; sex enum(&quot;boy&quot;,&quot;girl&quot;,&quot;no&quot;) not null default &quot;boy&quot;</span><br><span class="line">    -&gt; );</span><br><span class="line">mysql&gt; desc t7;</span><br><span class="line">+-------+-------------------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type                    | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------------------+------+-----+---------+-------+</span><br><span class="line">| name  | char(10)                | NO   |     | NULL    |       |</span><br><span class="line">| age   | int(5)                  | NO   |     | 20      |       |</span><br><span class="line">| sex   | enum(&apos;boy&apos;,&apos;girl&apos;,&apos;no&apos;) | NO   |     | boy     |       |</span><br><span class="line">+-------+-------------------------+------+-----+---------+-------+</span><br><span class="line">mysql&gt; insert into t7(name) value(&quot;mz&quot;);</span><br><span class="line">mysql&gt; select * from t7;</span><br><span class="line">+------+-----+-----+</span><br><span class="line">| name | age | sex |</span><br><span class="line">+------+-----+-----+</span><br><span class="line">| mz   |  20 | boy |</span><br><span class="line">+------+-----+-----+</span><br><span class="line">mysql&gt; insert into t7 values(null,94,girl);</span><br><span class="line">ERROR 1054 (42S22): Unknown column &apos;girl&apos; in &apos;field list&apos;</span><br><span class="line">mysql&gt; insert into t7 values(&quot;ababa&quot;,94,&quot;girl&quot;);</span><br><span class="line">mysql&gt; select * from t7;</span><br><span class="line">+-------+-----+------+</span><br><span class="line">| name  | age | sex  |</span><br><span class="line">+-------+-----+------+</span><br><span class="line">| mz    |  20 | boy  |</span><br><span class="line">| ababa |  94 | girl |</span><br><span class="line">+-------+-----+------+</span><br></pre></td></tr></table></figure><h4 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h4><p><code>alter table 表名 执行动作</code></p><ul><li>添加新字段<br><code>alter table 表名 add 字段名 类型(宽度) 约束条件;</code><br>添加新字段的时候可以使用<code>first</code>使添加的新字段在所有字段之前，或者使用<code>after 已有字段名</code>使添加的字段在指定字段之后。</li><li>删除已有字段<br><code>alter table 表名 drop 字段名;</code></li><li>修改字段类型（修改后的类型若与已有数据冲突则不允许修改）<br><code>alter table 表名 modify 字段名 类型(宽度) 约束条件;</code></li><li>修改字段名<br><code>alter table 表名 change 字段名 类型(宽度);</code></li><li>删除字段<br><code>alter table 表名 drop 字段名;</code><br><strong>注：</strong><blockquote><p>alter的操作可以写在一行sql语句。每个动作之前使用<code>,</code>分割</p></blockquote></li></ul><h2 id="mysql索引"><a href="#mysql索引" class="headerlink" title="mysql索引"></a>mysql索引</h2><p>mysql索引的作用，可以加快数据库查询的速度</p><h3 id="mysql索引类型"><a href="#mysql索引类型" class="headerlink" title="mysql索引类型"></a>mysql索引类型</h3><ul><li>普通索引 index</li><li>唯一索引 unqiue</li><li>全文索引 fulltext</li><li>主键     primary key</li><li>外建    foreign key<br>在使用中最常用的索引类型有：<code>index</code>、<code>pirmary key</code>和<code>forgign key</code></li></ul><p>mysql索引有</p><ul><li><code>brtee</code>(二叉数)算法   &lt;—-最常用的算法&gt;</li><li><code>hash</code>算法</li><li><code>b+tree</code>算法</li></ul><h3 id="索引操作"><a href="#索引操作" class="headerlink" title="索引操作"></a>索引操作</h3><ul><li><p>查看索引<br><code>show index from 表名;</code></p></li><li><p>创建索引</p><ul><li>建表时创建索引<br><code>create table 表名(字段列表,index(字段名),index(字段名));</code></li><li>给已有表中的字段设置索引<br><code>create index 索引名 on 表名(字段名);</code></li></ul></li><li>删除索引<br>  <code>drop index 索引名 on 表名;</code></li></ul><h3 id="mysql主键"><a href="#mysql主键" class="headerlink" title="mysql主键"></a>mysql主键</h3><p>在mysql中主键<code>primary key</code>规则</p><blockquote><p>一个表中只能有一个主键<br>主键的值不能为空且不可重复<br>表中如果需要多个字段设置为主键叫复合主键，复合主键必须一起创建字段<br>主键通常和<code>auto_increment</code>连用</p></blockquote><p><strong>注：</strong>创建主键时，单主键可以在字段名后面加<code>primary key</code>关键字约束，而符合主键必须在最后使用<code>primary key(字段1,字段2)</code>创建。</p><ul><li>创建主键<ul><li>创建表时创建主键<br><code>create table 表名(字段表,primary key(字段名));</code><br><code>create table 表名(字段名1 类型 primary key,字段名2 类型,....);</code></li><li>在已有的表中添加主键<br><code>alter table 表名 add primary key(字段名);</code></li></ul></li><li><p>删除主键<br><code>alter table 表名 drop primary key;</code></p></li><li><p>创建复合主键</p><blockquote><p>只要符复主键字段的值不同是重复就可以赋值<br><code>crate table 表名(字段表,primary key(字段1,字段2));</code></p></blockquote></li><li>删除符合主键<blockquote><p>复合主键删除方式和普通主键删除方式一致。只是，删除符合主键，会把所有主键删除。</p></blockquote></li></ul><h3 id="唯一索引unique"><a href="#唯一索引unique" class="headerlink" title="唯一索引unique"></a>唯一索引<code>unique</code></h3><blockquote><p>一个表中可以有多个<code>unique</code>字段，字段值不可以重复但可以赋空值。</p></blockquote><ul><li>创建唯一索引<br><code>crteat table 表名(字段表,unique(字段名1),unique(字段名2));</code></li><li>添加唯一索引<br><code>create unique index 索引名 on 表名(字段名);</code></li><li>删除唯一索引<br><code>alter table 表名 drop index 索引名;</code></li></ul><h3 id="mysql外键"><a href="#mysql外键" class="headerlink" title="mysql外键"></a>mysql外键</h3><p>mysql外键<code>foreign key</code>使用规则</p><blockquote><p>表的存储引擎必须是innodb<br>字段类型必须一致<br>主表的被参考字段必须是索引的一种</p></blockquote><p><strong>外键的作用：</strong></p><blockquote><p>保证数据的一致性</p></blockquote><ul><li><p>创建外键</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">id int primary key,</span><br><span class="line">name varchar(10) not null,</span><br><span class="line">tel char(11) unique,</span><br><span class="line">bm_id int,</span><br><span class="line">index(name),</span><br><span class="line">foregin key(bm_id) referneces 父表(bm_id) on update cascade on delete cascade;</span><br><span class="line">)engine=innodb;</span><br></pre></td></tr></table></figure></li><li><p>删除外键</p><blockquote><p>外键约束的情况下，父表不能被删除，并且父表中被关联的字段也不能删除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table 表名 drop foregin key 外键名;</span><br></pre></td></tr></table></figure></blockquote></li></ul><h2 id="mysql存储引擎"><a href="#mysql存储引擎" class="headerlink" title="mysql存储引擎"></a>mysql存储引擎</h2><ul><li><p>查看已有表的存储引擎<br><code>show create table 表名;</code></p></li><li><p>设置建表时的存储引擎和字符集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Create Table: CREATE TABLE tb17 (</span><br><span class="line">  id int(11) NOT NULL,</span><br><span class="line">  name varchar(10) DEFAULT NULL,</span><br><span class="line">  tel char(11) NOT NULL,</span><br><span class="line">  sex enum(&apos;boy&apos;,&apos;girl&apos;) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (id),</span><br><span class="line">  UNIQUE KEY tel (tel),</span><br><span class="line">  index(name)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1</span><br><span class="line">#ENGINE为存储引擎 CHARSET设置字符集</span><br></pre></td></tr></table></figure></li><li><p>修改存储引擎<br><code>alter table 表名 engine=引擎名</code></p></li><li><p>查看mysql支持的存储引擎</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show engines;</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         |</span><br><span class="line">| CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         |</span><br><span class="line">| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |</span><br><span class="line">| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |</span><br><span class="line">| MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         |</span><br><span class="line">| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |</span><br><span class="line">| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         |</span><br><span class="line">| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        |</span><br><span class="line">| FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">9 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p>修改mysql默认存储引擎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line"><span class="comment">#在&#123;mysqld&#125;中添加</span></span><br><span class="line">default-storage-engine=存储引擎</span><br></pre></td></tr></table></figure></li></ul><h3 id="mysql存储引擎特点"><a href="#mysql存储引擎特点" class="headerlink" title="mysql存储引擎特点"></a>mysql存储引擎特点</h3><p>在日常工作中，最常用的是<code>myisam</code>和<code>innodb</code>。<br><code>myisam</code>特点:</p><ol><li>独享表空间</li><li>表名.frm用于存储表结构</li><li>表名.myd用于存储表记录</li><li>表名.myi用于存储表索引</li><li>支持表级锁</li></ol><p><code>innodb</code>特点:</p><ol><li>共享表空间</li><li>表名.frm用于存储表结构</li><li>表名.idb用户存储表记录和表索引</li><li>支持行级锁</li></ol>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>版本控制软件之svn</title>
      <link href="/42797bb9.html"/>
      <content type="html"><![CDATA[<p> SVN作为新一代代码版本管理工具，有很多优点，管理方便，逻辑明确，安全性高，代码一致性高。SVN数据存储有两种方式，BDB（事务安全表类型）和FSFS（一种不需要数据库的存储系统），为了避免在服务器连接中断时锁住数据，FSFS是一种更安全也更多人使用的方式。SVN的运行方式也有两种，一种是独立服务器，另一种是借助apache服务，各有利弊，下面就介绍一下这两种方式各自的部署步骤。</p><hr><p>安装步骤如下：<br><strong>1、安装svn服务</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install subversion</span><br></pre></td></tr></table></figure></p><p><strong>2、创建版本库：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/svn/        <span class="comment">#创建版本库所在文件夹  </span></span><br><span class="line">svnadmin create --fs-type fsfs /opt/svn/p2pweb      <span class="comment">#创建版本库，如果需要使用bdb方式存储，则将fsfs改成bdb即可</span></span><br></pre></td></tr></table></figure></p><p><strong>3、初始化版本库，即导入文件到版本库中（开始没有代码不用导入）：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">svn import /root/p2pweb file:///opt/svn/p2pweb --message <span class="string">"初始化版本"</span>     <span class="comment">#将home文件夹的文件导入版本库  </span></span><br><span class="line">svn list --verbose file:///opt/svn/p2pweb  <span class="comment">#查看导入的文件</span></span><br></pre></td></tr></table></figure></p><p><img src="/img/svn/3.png" alt="3"></p><p><strong>4、进入conf目录（该svn版本库配置文件）</strong><br>authz文件是权限控制文件<br>passwd是帐号密码文件<br>svnserve.conf SVN服务配置文件<br>vim passwd   #在[users]块中添加用户和密码，格式：帐号=密码，如name1 = 123456<br><img src="/img/svn/4_1.png" alt="4.1"><br>vim authz  设置权限:  （注意：行后不能有注释内容，例如下图不能有红框内容，会报错的。）<br><img src="/img/svn/4_2.png" alt="4.2"></p><p><strong>5、修改svnserve.conf文件</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi svnserve.conf</span><br><span class="line">打开下面的几个注释：</span><br><span class="line">anon-access = <span class="built_in">read</span> <span class="comment">#匿名用户可读</span></span><br><span class="line">auth-access = write <span class="comment">#授权用户可写</span></span><br><span class="line">password-db = passwd <span class="comment">#使用哪个文件作为账号文件</span></span><br><span class="line">authz-db = authz <span class="comment">#使用哪个文件作为权限文件</span></span><br></pre></td></tr></table></figure></p><p><strong>6、启动svn服务，svn服务默认端口为3690，可以使用<code>netstat -ntlp</code>命令查看服务启动是否成功：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnserve -d -r /opt/svn         <span class="comment"># --listen-port参数修改端口，比如svnserve -d -r /opt/svn --listen-port 81(注：--listen-port中间无隔)</span></span><br></pre></td></tr></table></figure></p><p><strong>7、安装svn客户端，就可以使用客户端通过如下的url就可以访问了：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn://192.168.192.58/p2pweb</span><br></pre></td></tr></table></figure></p><p><strong>拓展：添加版本库</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create --fs-type fsfs /opt/svn/p2padmin      <span class="comment">#创建版本库，如果需要使用bdb方式存储，则将fsfs改成bdb即可</span></span><br></pre></td></tr></table></figure></p><p>初始化版本库，即导入文件到版本库中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn import /root/p2padmin file:///opt/svn/p2padmin --message <span class="string">"初始化版本"</span>     <span class="comment">#将home文件夹的文件导入版本库</span></span><br></pre></td></tr></table></figure></p><p>同样需要设置权限<br>无需启动：因为上面已经启动了。<br>客户端验证即可：svn://192.168.192.58/p2padmin    </p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux配置golang-OCI8开发环境</title>
      <link href="/8d969472.html"/>
      <content type="html"><![CDATA[<h3 id="OCI环境部署"><a href="#OCI环境部署" class="headerlink" title="OCI环境部署"></a>OCI环境部署</h3><ul><li>将下面3个文件解压并拷贝到<code>/usr/local</code>目录下<br><code>instantclient-basic-linux.x64-12.2.0.1.0.zip</code><br><code>instantclient-sdk-linux.x64-12.2.0.1.0.zip</code><br><code>instantclient-sqlplus-linux.x64-12.2.0.1.0.zip</code><br><a href="https://pan.baidu.com/s/1ggKEksN" target="_blank" rel="noopener">下载地址</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">unzip -x instantclient-basic-linux.x64-12.2.0.1.0.zip</span><br><span class="line">unzip -x instantclient-sdk-linux.x64-12.2.0.1.0.zip</span><br><span class="line">unzip -x instantclient-sqlplus-linux.x64-12.2.0.1.0.zip</span><br><span class="line">cp instantclient_12_2 /usr/<span class="built_in">local</span>/instantclient</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/instantclient</span><br><span class="line">ln -s libclntsh.so.12.1 libclntsh.so</span><br></pre></td></tr></table></figure><ul><li>添加oci的配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/pkgconfig/oci8.pc</span><br><span class="line"><span class="comment"># 内容如下</span></span><br><span class="line">prefix=/usr/<span class="built_in">local</span>/instantclient</span><br><span class="line">exec_prefix=<span class="variable">$&#123;prefix&#125;</span></span><br><span class="line">libdir=<span class="variable">$&#123;prefix&#125;</span></span><br><span class="line">includedir=<span class="variable">$&#123;prefix&#125;</span>/sdk/include</span><br><span class="line">glib_genmarshal=glib-genmarshal</span><br><span class="line">gobject_query=gobject-query</span><br><span class="line">glib_mkenums=glib-mkenums</span><br><span class="line">Name: oci8</span><br><span class="line">Description: oci8 library</span><br><span class="line">Libs: -L<span class="variable">$&#123;libdir&#125;</span> -lclntsh</span><br><span class="line">Cflags: -I<span class="variable">$&#123;includedir&#125;</span></span><br><span class="line">Version: 12.2</span><br><span class="line"><span class="comment"># 再将环境变量写入profile</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PKG_CONFIG_PATH=/user/lib/pkgconfig'</span> &gt;&gt;/etc/profile</span><br></pre></td></tr></table></figure><p>测试oci安装成功<br><code>pkg-config --list-all | grep oci8</code></p><ul><li>配置客户端环境变量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="comment"># 内容如下</span></span><br><span class="line"><span class="built_in">export</span> ora_home=/usr/<span class="built_in">local</span>/instantclient</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ora_home</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$ora_home</span></span><br></pre></td></tr></table></figure><h3 id="安装go-oci8包"><a href="#安装go-oci8包" class="headerlink" title="安装go-oci8包"></a>安装go-oci8包</h3><p><code>go get github.com/mattn/go-oci8</code></p>]]></content>
      
      <categories>
          
          <category> golang </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>VSFTP实时文件名转码脚本</title>
      <link href="/fade5af8.html"/>
      <content type="html"><![CDATA[<p>[TOC]<br>事情是这样的：公司需要我搭一台vsftp服务器用来pdf文件用户程序的处理和存档。但是上传方上传上来的是GBK编码，而linux下使用UTF8编码，已经运行了几年的服务器更改系统编码已是不可能，于是想到对VSFTP进行更改。经过不断的google+baidu，发现vsftp并不能实现中文名转码的功能，于是自己写一个小脚本,使用到inotifywait和convmv。</p><p>inotify是一个很好的文件系统实时监控工具，用的地方很多。于是想到监控FTP目录下文件的CLOSE状态，确保文件被写完之后再进行文件名跟改，防止在更改的时候FTP继续写文件出错。<br>转码用convmv工具，进行编码转换。convmv默认以测试方式运行，不会对真实文件进行文件名替换，<code>--notest</code> 参数用于解除test模式，<code>-f</code>指定源编码模式，<code>-t</code>指定目标编码模式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">ftpDir=/data/ftp/</span><br><span class="line"></span><br><span class="line"><span class="comment">#首次启动对FTP目录进行编码转换，防止脚本意外终止导致编码没有转换的问题</span></span><br><span class="line">find <span class="variable">$ftpDir</span> -<span class="built_in">type</span> f -name *.pdf | xargs convmv -f GBK -t UTF-8 --notest</span><br><span class="line"></span><br><span class="line"><span class="comment">#监听FTP目录，遇到CLOSE状态的文件进行编码转换，忽略目录</span></span><br><span class="line">inotifywait -rmq -e close <span class="variable">$ftpDir</span> | <span class="keyword">while</span> <span class="built_in">read</span> line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        k=`<span class="built_in">echo</span> <span class="variable">$line</span> | grep -v ISDIR`</span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$k</span>"</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">continue</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ftpFile=`<span class="built_in">echo</span> <span class="variable">$line</span> | awk <span class="string">'&#123;print $1$3&#125;'</span>`</span><br><span class="line">        convmv -f GBK -t UTF-8 --notest <span class="variable">$ftpFile</span> &amp;gt;&amp;gt; /var/<span class="built_in">log</span>/convmv.log</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>zabbix监控环境温度</title>
      <link href="/4c5753df.html"/>
      <content type="html"><![CDATA[<p>配件及准备</p><table><thead><tr><th>树莓派（装好centos7系统和zabbix agent）</th><th>1</th></tr></thead><tbody><tr><td>ds18b20</td><td>1</td></tr></tbody></table><p>公司自建机房，然后空调故障，扣了我们背锅侠每人500块钱，表示很郁闷。够吃多少顿大排档了！！本背锅侠表示不服！由于正在做公司的ZABBIX监控，手上正好有块树莓派（本背锅侠自己的，已被公司征用），于是想着把温度整合到zabbix里面。从某宝买了一个DS18B20板子，已经焊好电阻等器件，如图：</p><p><img src="http://upload-images.jianshu.io/upload_images/5791644-56fcdb07c6a0ab8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="DS18B20"></p><h4 id="0x01-经过若干天的等待，某宝的DS18B20到了之后，接上树莓派，接线如下图所示："><a href="#0x01-经过若干天的等待，某宝的DS18B20到了之后，接上树莓派，接线如下图所示：" class="headerlink" title="0x01  经过若干天的等待，某宝的DS18B20到了之后，接上树莓派，接线如下图所示："></a>0x01  经过若干天的等待，某宝的DS18B20到了之后，接上树莓派，接线如下图所示：</h4><p><img src="http://upload-images.jianshu.io/upload_images/5791644-67fb61f31271bd7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="接线图"></p><h4 id="0x02-修改树莓派的boot配置，添加对ds18b20的驱动支持，不然读取不到温度信息"><a href="#0x02-修改树莓派的boot配置，添加对ds18b20的驱动支持，不然读取不到温度信息" class="headerlink" title="0x02 修改树莓派的boot配置，添加对ds18b20的驱动支持，不然读取不到温度信息"></a>0x02 修改树莓派的boot配置，添加对ds18b20的驱动支持，不然读取不到温度信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"dtoverlay=w1-gpio"</span> &gt;&gt; /boot/config.txt</span><br></pre></td></tr></table></figure><p>蓝后，重启树莓派，发现可以读取到ds18b20的驱动信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /sys/bus/w1/devices/w1_bus_master1/28-0316a281adff/w1_slave </span><br><span class="line">7f 01 4b 46 7f ff 0c 10 ba : crc=ba YES</span><br><span class="line">7f 01 4b 46 7f ff 0c 10 ba t=23937</span><br></pre></td></tr></table></figure></p><blockquote><p> 注：28-0316a281adff是设备号，每个人的设备号会不一样。<br><br>  其中t=23937就是温度，计算出实际问题，只需要除以1000就可以。</p></blockquote><h4 id="0x03-使用代码获取温度"><a href="#0x03-使用代码获取温度" class="headerlink" title="0x03 使用代码获取温度"></a>0x03 使用代码获取温度</h4><p>这一步很简单，对于会linux的小伙伴应该超级简单。一条awk就可以搞定<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk -F= <span class="string">'$0~/t=/&#123;print $2/1000&#125;'</span> /sys/bus/w1/devices/w1_bus_master1/28-0316a281adff/w1_slave</span><br><span class="line">24.25</span><br></pre></td></tr></table></figure></p><p>ps：最近本背锅侠在看golang，于是闲的无聊，就用golang写了一版<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">"fmt"</span></span><br><span class="line">        <span class="string">"io/ioutil"</span></span><br><span class="line">        <span class="string">"strconv"</span></span><br><span class="line">        <span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        date, err := ioutil.ReadFile(<span class="string">"/sys/bus/w1/devices/28-0316a281adff/w1_slave"</span>)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        tmp := fmt.Sprintf(<span class="string">"%s"</span>, date)</span><br><span class="line">        buffer := strings.Split(tmp, <span class="string">"="</span>)</span><br><span class="line">        buffer1 := strings.Split(buffer[<span class="number">2</span>], <span class="string">"\n"</span>)</span><br><span class="line">        temp, err := strconv.Atoi(buffer1[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                fmt.Println(err)</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Println(<span class="keyword">float64</span>(temp) / <span class="number">1000.0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="0x03-接入zabbix"><a href="#0x03-接入zabbix" class="headerlink" title="0x03 接入zabbix"></a>0x03 接入zabbix</h4><p>修改zabbix_agentd的配置文件，添加key和对应程序的路径（本背锅侠用golang写的，所以直接编译成二进制了）<br><code>UserParameter=get_temp,/opt/zabbix_agent/script/get_temp</code></p><h4 id="0x04-zabbix-server添加监控项、触发器和图形"><a href="#0x04-zabbix-server添加监控项、触发器和图形" class="headerlink" title="0x04 zabbix server添加监控项、触发器和图形"></a>0x04 zabbix server添加监控项、触发器和图形</h4><p>监控项配置如下：信息要选浮点数<br><img src="http://upload-images.jianshu.io/upload_images/5791644-3328811af3ae9bc6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="监控项"></p><p>触发器配置如下：<br><img src="http://upload-images.jianshu.io/upload_images/5791644-6fb84a2e1d8786a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="触发器"></p><p>图形配置如下：在监控项里面选择上面配置的温度监控项<br><img src="http://upload-images.jianshu.io/upload_images/5791644-ac228e915d8e8549.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图形"></p><h4 id="0x04-zabbix效果图和grafana上的效果"><a href="#0x04-zabbix效果图和grafana上的效果" class="headerlink" title="0x04 zabbix效果图和grafana上的效果"></a>0x04 zabbix效果图和grafana上的效果</h4><p>zabbix效果图<br><img src="http://upload-images.jianshu.io/upload_images/5791644-005828b388cf329e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="zabbix效果"></p><p>grafana效果图<br><img src="http://upload-images.jianshu.io/upload_images/5791644-715d37d0d352f0fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="grafana效果"></p>]]></content>
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>LVM常用命令</title>
      <link href="/69a5317b.html"/>
      <content type="html"><![CDATA[<h3 id="LVM逻辑卷"><a href="#LVM逻辑卷" class="headerlink" title="LVM逻辑卷"></a>LVM逻辑卷</h3><blockquote><p>将多个物理分区/磁盘从逻辑组合成一个更大到整体，其中划分出不同到逻辑分区，逻辑分区到大小可以根据需要扩大、缩小</p></blockquote><p><strong>逻辑卷作用</strong></p><ul><li>整合容量小磁盘</li><li>动态伸缩磁盘容量</li></ul><p><strong>LVM逻辑卷简称</strong></p><ul><li>pv 物理卷</li><li>VG 卷组</li><li>LV    逻辑卷</li></ul><p>LVM逻辑卷操作<br><code>parted /dev/vda</code>  #对GPT分区操作<br><code>mktable gpt</code>  #更改分区表为GPT<br><code>mkpar</code>   #创建分区<br><code>pvscan</code>  #搜索物理卷<br><code>pvcreate</code>  #创建LVM物理卷<br><code>vgcreate</code> #创建LVM卷组</p><blockquote><p>vgcreate vgname pvname…<br><code>vgs</code> #扫描LVM卷组</p></blockquote><h4 id="扩展LVM卷组"><a href="#扩展LVM卷组" class="headerlink" title="扩展LVM卷组"></a>扩展LVM卷组</h4><ul><li>创建分区<br><code>parted /dev/vda mkpart lvm3 ext4 20G 40G</code></li><li>刷新分区表<br><code>partx -a /dev/vda</code></li><li>添加分区到卷组<br><code>vgextend vgname /dev/vda3</code></li></ul><h4 id="创建LVM逻辑卷"><a href="#创建LVM逻辑卷" class="headerlink" title="创建LVM逻辑卷"></a>创建LVM逻辑卷</h4><p><code>lvcreate</code> #创建LVM逻辑卷</p><blockquote><p>lvcreate -L size -n name vgname #其中-L指定逻辑卷大小，-n指定逻辑卷名字，vgname为卷组名称</p></blockquote><h4 id="扩展LVM逻辑卷"><a href="#扩展LVM逻辑卷" class="headerlink" title="扩展LVM逻辑卷"></a>扩展LVM逻辑卷</h4><ul><li>增加逻辑卷大小<br><code>lvextend -L size /dev/vgname/lvname</code> #-L指定逻辑卷大小或者增加的大小</li><li>刷新文件系统<br><code>resize2fs /dev/vgname/lvname</code>  #刷新文件系统</li></ul><h4 id="删除逻辑卷"><a href="#删除逻辑卷" class="headerlink" title="删除逻辑卷"></a>删除逻辑卷</h4><p><code>lvremove /dev/vgname/lvname</code></p><h4 id="删除卷组"><a href="#删除卷组" class="headerlink" title="删除卷组"></a>删除卷组</h4><p><code>vgremove vgname</code></p><h4 id="删除物理卷"><a href="#删除物理卷" class="headerlink" title="删除物理卷"></a>删除物理卷</h4><p><code>pvremove /dev/pvname</code></p><h4 id="PE修改"><a href="#PE修改" class="headerlink" title="PE修改"></a>PE修改</h4><p><code>vgchange -s 1M myvg</code> -&gt; 修改PE大小为1M</p><blockquote><p>RHCE考题： 创建一个250M的辑卷<br>默认逻辑卷为4M，新建逻辑卷，会有少量多出<br>解题：<br><code>vgchange -s 1M vgname</code><br><code>lvcreate -L 250M -n lvname vgname</code></p></blockquote>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
